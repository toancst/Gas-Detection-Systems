#include "stm32f4xx.h"

void delay_ms(uint32_t ms) {
    SysTick->LOAD = 84000 - 1; // 84 MHz => 1ms
    SysTick->VAL = 0;
    SysTick->CTRL = 5;
    for (uint32_t i = 0; i < ms; i++) {
        while (!(SysTick->CTRL & (1 << 16)));
    }
    SysTick->CTRL = 0;
}

void SystemClock_Config(void) {
    RCC->CR |= RCC_CR_HSION;
    while (!(RCC->CR & RCC_CR_HSIRDY));

    RCC->PLLCFGR = (16 << RCC_PLLCFGR_PLLM_Pos) |
                   (336 << RCC_PLLCFGR_PLLN_Pos) |
                   (0 << RCC_PLLCFGR_PLLP_Pos) |
                   RCC_PLLCFGR_PLLSRC_HSI |
                   (7 << RCC_PLLCFGR_PLLQ_Pos);

    RCC->CR |= RCC_CR_PLLON;
    while (!(RCC->CR & RCC_CR_PLLRDY));

    FLASH->ACR |= FLASH_ACR_LATENCY_2WS;

    RCC->CFGR |= RCC_CFGR_HPRE_DIV1 |
                 RCC_CFGR_PPRE1_DIV2 |
                 RCC_CFGR_PPRE2_DIV1;

    RCC->CFGR &= ~RCC_CFGR_SW;
    RCC->CFGR |= RCC_CFGR_SW_PLL;
    while ((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_PLL);
}

void GPIO_Init(void) {
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
    GPIOA->MODER &= ~(3 << (1 * 2));
    GPIOA->MODER |= (1 << (1 * 2));
    GPIOA->OTYPER &= ~(1 << 1);
    GPIOA->OSPEEDR &= ~(3 << (1 * 2));
    GPIOA->PUPDR &= ~(3 << (1 * 2));
    GPIOA->BSRR = (1 << (1 + 16)); // Tắt PA1
}

int main(void) {
    SystemClock_Config();
    GPIO_Init();

    while (1) {
        GPIOA->BSRR = (1 << 1);        // Bật PA1
        delay_ms(6000);
        GPIOA->BSRR = (1 << (1 + 16)); // Tắt PA1
        delay_ms(1000);
    }
}
