#include "stm32f4xx.h"

void UART2_Init(void) {
    RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
    GPIOA->MODER |= (2 << 4) | (2 << 6);  // PA2, PA3: AF mode
    GPIOA->AFR[0] |= (7 << 8) | (7 << 12); // AF7: UART2
    USART2->BRR = 0x8B;  // 115200 baud (HCLK = 16MHz)
    USART2->CR1 = USART_CR1_TE | USART_CR1_UE;
}

void UART2_SendString(char *str) {
    while (*str) {
        while (!(USART2->SR & USART_SR_TXE));
        USART2->DR = *str++;
    }
}

void GPIOB_Init(void) {
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOBEN;
    GPIOB->MODER &= ~((3 << 0) | (3 << 2)); // PB0, PB1 input
    GPIOB->PUPDR |= (1 << 0) | (1 << 2); // Pull-up resistor
}

int main(void) {
    UART2_Init();
    GPIOB_Init();

    uint8_t prev_B0 = GPIOB->IDR & (1 << 0);
    uint8_t prev_B1 = GPIOB->IDR & (1 << 1);

    while (1) {
        uint8_t current_B0 = GPIOB->IDR & (1 << 0);
        uint8_t current_B1 = GPIOB->IDR & (1 << 1);

        if (!prev_B0 && current_B0) {
            UART2_SendString("Rising edge on B0\n");
        }
        if (!prev_B1 && current_B1) {
            UART2_SendString("Rising edge on B1\n");
        }

        prev_B0 = current_B0;
        prev_B1 = current_B1;
    }
}
