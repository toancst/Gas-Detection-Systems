
OLED.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001790  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001f0  08001930  08001930  00002930  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001b20  08001b20  00003054  2**0
                  CONTENTS
  4 .ARM          00000008  08001b20  08001b20  00002b20  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08001b28  08001b28  00003054  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001b28  08001b28  00002b28  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001b2c  08001b2c  00002b2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000054  20000000  08001b30  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000017c  20000054  08001b84  00003054  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001d0  08001b84  000031d0  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00003054  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002a20  00000000  00000000  00003084  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000b5d  00000000  00000000  00005aa4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000248  00000000  00000000  00006608  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000187  00000000  00000000  00006850  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00015201  00000000  00000000  000069d7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00005164  00000000  00000000  0001bbd8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00083439  00000000  00000000  00020d3c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000a4175  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b00  00000000  00000000  000a41b8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000060  00000000  00000000  000a4cb8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000054 	.word	0x20000054
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08001918 	.word	0x08001918

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000058 	.word	0x20000058
 80001dc:	08001918 	.word	0x08001918

080001e0 <strlen>:
 80001e0:	4603      	mov	r3, r0
 80001e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001e6:	2a00      	cmp	r2, #0
 80001e8:	d1fb      	bne.n	80001e2 <strlen+0x2>
 80001ea:	1a18      	subs	r0, r3, r0
 80001ec:	3801      	subs	r0, #1
 80001ee:	4770      	bx	lr

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <ADC_Init>:
// ====== adc.c ======
#include "stm32f4xx.h"
#include "adc.h"
#include "system.h"

void ADC_Init(void) {
 8000290:	b580      	push	{r7, lr}
 8000292:	af00      	add	r7, sp, #0
    RCC->APB2ENR |= RCC_APB2ENR_ADC1EN;
 8000294:	4b12      	ldr	r3, [pc, #72]	@ (80002e0 <ADC_Init+0x50>)
 8000296:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000298:	4a11      	ldr	r2, [pc, #68]	@ (80002e0 <ADC_Init+0x50>)
 800029a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800029e:	6453      	str	r3, [r2, #68]	@ 0x44
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
 80002a0:	4b0f      	ldr	r3, [pc, #60]	@ (80002e0 <ADC_Init+0x50>)
 80002a2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002a4:	4a0e      	ldr	r2, [pc, #56]	@ (80002e0 <ADC_Init+0x50>)
 80002a6:	f043 0301 	orr.w	r3, r3, #1
 80002aa:	6313      	str	r3, [r2, #48]	@ 0x30

    GPIOA->MODER |= (3 << (0 * 2));
 80002ac:	4b0d      	ldr	r3, [pc, #52]	@ (80002e4 <ADC_Init+0x54>)
 80002ae:	681b      	ldr	r3, [r3, #0]
 80002b0:	4a0c      	ldr	r2, [pc, #48]	@ (80002e4 <ADC_Init+0x54>)
 80002b2:	f043 0303 	orr.w	r3, r3, #3
 80002b6:	6013      	str	r3, [r2, #0]

    ADC1->SQR3 = 0;
 80002b8:	4b0b      	ldr	r3, [pc, #44]	@ (80002e8 <ADC_Init+0x58>)
 80002ba:	2200      	movs	r2, #0
 80002bc:	635a      	str	r2, [r3, #52]	@ 0x34
    ADC1->SMPR2 |= (7 << 0);
 80002be:	4b0a      	ldr	r3, [pc, #40]	@ (80002e8 <ADC_Init+0x58>)
 80002c0:	691b      	ldr	r3, [r3, #16]
 80002c2:	4a09      	ldr	r2, [pc, #36]	@ (80002e8 <ADC_Init+0x58>)
 80002c4:	f043 0307 	orr.w	r3, r3, #7
 80002c8:	6113      	str	r3, [r2, #16]
    ADC1->CR2 |= ADC_CR2_ADON;
 80002ca:	4b07      	ldr	r3, [pc, #28]	@ (80002e8 <ADC_Init+0x58>)
 80002cc:	689b      	ldr	r3, [r3, #8]
 80002ce:	4a06      	ldr	r2, [pc, #24]	@ (80002e8 <ADC_Init+0x58>)
 80002d0:	f043 0301 	orr.w	r3, r3, #1
 80002d4:	6093      	str	r3, [r2, #8]

    Delay_ms(2);
 80002d6:	2002      	movs	r0, #2
 80002d8:	f000 fe1e 	bl	8000f18 <Delay_ms>
}
 80002dc:	bf00      	nop
 80002de:	bd80      	pop	{r7, pc}
 80002e0:	40023800 	.word	0x40023800
 80002e4:	40020000 	.word	0x40020000
 80002e8:	40012000 	.word	0x40012000

080002ec <ADC_Read>:

uint16_t ADC_Read(void) {
 80002ec:	b480      	push	{r7}
 80002ee:	af00      	add	r7, sp, #0
    ADC1->CR2 |= ADC_CR2_SWSTART;
 80002f0:	4b0a      	ldr	r3, [pc, #40]	@ (800031c <ADC_Read+0x30>)
 80002f2:	689b      	ldr	r3, [r3, #8]
 80002f4:	4a09      	ldr	r2, [pc, #36]	@ (800031c <ADC_Read+0x30>)
 80002f6:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 80002fa:	6093      	str	r3, [r2, #8]
    while (!(ADC1->SR & ADC_SR_EOC));
 80002fc:	bf00      	nop
 80002fe:	4b07      	ldr	r3, [pc, #28]	@ (800031c <ADC_Read+0x30>)
 8000300:	681b      	ldr	r3, [r3, #0]
 8000302:	f003 0302 	and.w	r3, r3, #2
 8000306:	2b00      	cmp	r3, #0
 8000308:	d0f9      	beq.n	80002fe <ADC_Read+0x12>
    return ADC1->DR;
 800030a:	4b04      	ldr	r3, [pc, #16]	@ (800031c <ADC_Read+0x30>)
 800030c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800030e:	b29b      	uxth	r3, r3
}
 8000310:	4618      	mov	r0, r3
 8000312:	46bd      	mov	sp, r7
 8000314:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000318:	4770      	bx	lr
 800031a:	bf00      	nop
 800031c:	40012000 	.word	0x40012000

08000320 <Mode_Update_From_ADC>:

uint8_t Mode_Update_From_ADC(void) {
 8000320:	b580      	push	{r7, lr}
 8000322:	b082      	sub	sp, #8
 8000324:	af00      	add	r7, sp, #0
    uint16_t adc_value = ADC_Read();
 8000326:	f7ff ffe1 	bl	80002ec <ADC_Read>
 800032a:	4603      	mov	r3, r0
 800032c:	80fb      	strh	r3, [r7, #6]
    if (adc_value < 200) return 0;
 800032e:	88fb      	ldrh	r3, [r7, #6]
 8000330:	2bc7      	cmp	r3, #199	@ 0xc7
 8000332:	d801      	bhi.n	8000338 <Mode_Update_From_ADC+0x18>
 8000334:	2300      	movs	r3, #0
 8000336:	e00e      	b.n	8000356 <Mode_Update_From_ADC+0x36>
    else if (adc_value < 1365) return 1;
 8000338:	88fb      	ldrh	r3, [r7, #6]
 800033a:	f240 5254 	movw	r2, #1364	@ 0x554
 800033e:	4293      	cmp	r3, r2
 8000340:	d801      	bhi.n	8000346 <Mode_Update_From_ADC+0x26>
 8000342:	2301      	movs	r3, #1
 8000344:	e007      	b.n	8000356 <Mode_Update_From_ADC+0x36>
    else if (adc_value < 2730) return 2;
 8000346:	88fb      	ldrh	r3, [r7, #6]
 8000348:	f640 22a9 	movw	r2, #2729	@ 0xaa9
 800034c:	4293      	cmp	r3, r2
 800034e:	d801      	bhi.n	8000354 <Mode_Update_From_ADC+0x34>
 8000350:	2302      	movs	r3, #2
 8000352:	e000      	b.n	8000356 <Mode_Update_From_ADC+0x36>
    else return 3;
 8000354:	2303      	movs	r3, #3
}
 8000356:	4618      	mov	r0, r3
 8000358:	3708      	adds	r7, #8
 800035a:	46bd      	mov	sp, r7
 800035c:	bd80      	pop	{r7, pc}
	...

08000360 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000360:	b480      	push	{r7}
 8000362:	b083      	sub	sp, #12
 8000364:	af00      	add	r7, sp, #0
 8000366:	4603      	mov	r3, r0
 8000368:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800036a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800036e:	2b00      	cmp	r3, #0
 8000370:	db0b      	blt.n	800038a <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000372:	79fb      	ldrb	r3, [r7, #7]
 8000374:	f003 021f 	and.w	r2, r3, #31
 8000378:	4907      	ldr	r1, [pc, #28]	@ (8000398 <__NVIC_EnableIRQ+0x38>)
 800037a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800037e:	095b      	lsrs	r3, r3, #5
 8000380:	2001      	movs	r0, #1
 8000382:	fa00 f202 	lsl.w	r2, r0, r2
 8000386:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 800038a:	bf00      	nop
 800038c:	370c      	adds	r7, #12
 800038e:	46bd      	mov	sp, r7
 8000390:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000394:	4770      	bx	lr
 8000396:	bf00      	nop
 8000398:	e000e100 	.word	0xe000e100

0800039c <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 800039c:	b480      	push	{r7}
 800039e:	b083      	sub	sp, #12
 80003a0:	af00      	add	r7, sp, #0
 80003a2:	4603      	mov	r3, r0
 80003a4:	6039      	str	r1, [r7, #0]
 80003a6:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80003a8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80003ac:	2b00      	cmp	r3, #0
 80003ae:	db0a      	blt.n	80003c6 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80003b0:	683b      	ldr	r3, [r7, #0]
 80003b2:	b2da      	uxtb	r2, r3
 80003b4:	490c      	ldr	r1, [pc, #48]	@ (80003e8 <__NVIC_SetPriority+0x4c>)
 80003b6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80003ba:	0112      	lsls	r2, r2, #4
 80003bc:	b2d2      	uxtb	r2, r2
 80003be:	440b      	add	r3, r1
 80003c0:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 80003c4:	e00a      	b.n	80003dc <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80003c6:	683b      	ldr	r3, [r7, #0]
 80003c8:	b2da      	uxtb	r2, r3
 80003ca:	4908      	ldr	r1, [pc, #32]	@ (80003ec <__NVIC_SetPriority+0x50>)
 80003cc:	79fb      	ldrb	r3, [r7, #7]
 80003ce:	f003 030f 	and.w	r3, r3, #15
 80003d2:	3b04      	subs	r3, #4
 80003d4:	0112      	lsls	r2, r2, #4
 80003d6:	b2d2      	uxtb	r2, r2
 80003d8:	440b      	add	r3, r1
 80003da:	761a      	strb	r2, [r3, #24]
}
 80003dc:	bf00      	nop
 80003de:	370c      	adds	r7, #12
 80003e0:	46bd      	mov	sp, r7
 80003e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003e6:	4770      	bx	lr
 80003e8:	e000e100 	.word	0xe000e100
 80003ec:	e000ed00 	.word	0xe000ed00

080003f0 <GPIO_EXTI_Init>:
volatile uint8_t mode = 1;
volatile uint8_t button_pressed = 0;
volatile uint8_t system_active = 1; // 1 = hoạt động, 0 = tắt
volatile uint8_t oled_state = 3;

void GPIO_EXTI_Init(void) {
 80003f0:	b580      	push	{r7, lr}
 80003f2:	af00      	add	r7, sp, #0
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN | RCC_AHB1ENR_GPIOBEN;
 80003f4:	4b28      	ldr	r3, [pc, #160]	@ (8000498 <GPIO_EXTI_Init+0xa8>)
 80003f6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003f8:	4a27      	ldr	r2, [pc, #156]	@ (8000498 <GPIO_EXTI_Init+0xa8>)
 80003fa:	f043 0303 	orr.w	r3, r3, #3
 80003fe:	6313      	str	r3, [r2, #48]	@ 0x30
    RCC->APB2ENR |= RCC_APB2ENR_SYSCFGEN;
 8000400:	4b25      	ldr	r3, [pc, #148]	@ (8000498 <GPIO_EXTI_Init+0xa8>)
 8000402:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000404:	4a24      	ldr	r2, [pc, #144]	@ (8000498 <GPIO_EXTI_Init+0xa8>)
 8000406:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800040a:	6453      	str	r3, [r2, #68]	@ 0x44

    GPIOA->MODER &= ~((3 << (6 * 2)) | (3 << (7 * 2)));
 800040c:	4b23      	ldr	r3, [pc, #140]	@ (800049c <GPIO_EXTI_Init+0xac>)
 800040e:	681b      	ldr	r3, [r3, #0]
 8000410:	4a22      	ldr	r2, [pc, #136]	@ (800049c <GPIO_EXTI_Init+0xac>)
 8000412:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8000416:	6013      	str	r3, [r2, #0]
    GPIOB->MODER &= ~((3 << (0 * 2)) | (3 << (1 * 2)));
 8000418:	4b21      	ldr	r3, [pc, #132]	@ (80004a0 <GPIO_EXTI_Init+0xb0>)
 800041a:	681b      	ldr	r3, [r3, #0]
 800041c:	4a20      	ldr	r2, [pc, #128]	@ (80004a0 <GPIO_EXTI_Init+0xb0>)
 800041e:	f023 030f 	bic.w	r3, r3, #15
 8000422:	6013      	str	r3, [r2, #0]

    GPIOA->PUPDR |= (1 << (6 * 2)) | (1 << (7 * 2));
 8000424:	4b1d      	ldr	r3, [pc, #116]	@ (800049c <GPIO_EXTI_Init+0xac>)
 8000426:	68db      	ldr	r3, [r3, #12]
 8000428:	4a1c      	ldr	r2, [pc, #112]	@ (800049c <GPIO_EXTI_Init+0xac>)
 800042a:	f443 43a0 	orr.w	r3, r3, #20480	@ 0x5000
 800042e:	60d3      	str	r3, [r2, #12]
    GPIOB->PUPDR |= (1 << (0 * 2)) | (1 << (1 * 2));
 8000430:	4b1b      	ldr	r3, [pc, #108]	@ (80004a0 <GPIO_EXTI_Init+0xb0>)
 8000432:	68db      	ldr	r3, [r3, #12]
 8000434:	4a1a      	ldr	r2, [pc, #104]	@ (80004a0 <GPIO_EXTI_Init+0xb0>)
 8000436:	f043 0305 	orr.w	r3, r3, #5
 800043a:	60d3      	str	r3, [r2, #12]

    SYSCFG->EXTICR[1] |= SYSCFG_EXTICR2_EXTI6_PA | SYSCFG_EXTICR2_EXTI7_PA;
 800043c:	4b19      	ldr	r3, [pc, #100]	@ (80004a4 <GPIO_EXTI_Init+0xb4>)
 800043e:	4a19      	ldr	r2, [pc, #100]	@ (80004a4 <GPIO_EXTI_Init+0xb4>)
 8000440:	68db      	ldr	r3, [r3, #12]
 8000442:	60d3      	str	r3, [r2, #12]
    SYSCFG->EXTICR[0] |= SYSCFG_EXTICR1_EXTI0_PB | SYSCFG_EXTICR1_EXTI1_PB;
 8000444:	4b17      	ldr	r3, [pc, #92]	@ (80004a4 <GPIO_EXTI_Init+0xb4>)
 8000446:	689b      	ldr	r3, [r3, #8]
 8000448:	4a16      	ldr	r2, [pc, #88]	@ (80004a4 <GPIO_EXTI_Init+0xb4>)
 800044a:	f043 0311 	orr.w	r3, r3, #17
 800044e:	6093      	str	r3, [r2, #8]

    EXTI->IMR |= (1 << 6) | (1 << 7) | (1 << 0) | (1 << 1);
 8000450:	4b15      	ldr	r3, [pc, #84]	@ (80004a8 <GPIO_EXTI_Init+0xb8>)
 8000452:	681b      	ldr	r3, [r3, #0]
 8000454:	4a14      	ldr	r2, [pc, #80]	@ (80004a8 <GPIO_EXTI_Init+0xb8>)
 8000456:	f043 03c3 	orr.w	r3, r3, #195	@ 0xc3
 800045a:	6013      	str	r3, [r2, #0]
    EXTI->FTSR |= (1 << 6) | (1 << 7) | (1 << 0) | (1 << 1);
 800045c:	4b12      	ldr	r3, [pc, #72]	@ (80004a8 <GPIO_EXTI_Init+0xb8>)
 800045e:	68db      	ldr	r3, [r3, #12]
 8000460:	4a11      	ldr	r2, [pc, #68]	@ (80004a8 <GPIO_EXTI_Init+0xb8>)
 8000462:	f043 03c3 	orr.w	r3, r3, #195	@ 0xc3
 8000466:	60d3      	str	r3, [r2, #12]

    NVIC_EnableIRQ(EXTI9_5_IRQn);
 8000468:	2017      	movs	r0, #23
 800046a:	f7ff ff79 	bl	8000360 <__NVIC_EnableIRQ>
    NVIC_EnableIRQ(EXTI0_IRQn);
 800046e:	2006      	movs	r0, #6
 8000470:	f7ff ff76 	bl	8000360 <__NVIC_EnableIRQ>
    NVIC_EnableIRQ(EXTI1_IRQn);
 8000474:	2007      	movs	r0, #7
 8000476:	f7ff ff73 	bl	8000360 <__NVIC_EnableIRQ>

    NVIC_SetPriority(EXTI9_5_IRQn, 0); // Ưu tiên cao nhất
 800047a:	2100      	movs	r1, #0
 800047c:	2017      	movs	r0, #23
 800047e:	f7ff ff8d 	bl	800039c <__NVIC_SetPriority>
    NVIC_SetPriority(EXTI0_IRQn, 1);
 8000482:	2101      	movs	r1, #1
 8000484:	2006      	movs	r0, #6
 8000486:	f7ff ff89 	bl	800039c <__NVIC_SetPriority>
    NVIC_SetPriority(EXTI1_IRQn, 1);
 800048a:	2101      	movs	r1, #1
 800048c:	2007      	movs	r0, #7
 800048e:	f7ff ff85 	bl	800039c <__NVIC_SetPriority>
}
 8000492:	bf00      	nop
 8000494:	bd80      	pop	{r7, pc}
 8000496:	bf00      	nop
 8000498:	40023800 	.word	0x40023800
 800049c:	40020000 	.word	0x40020000
 80004a0:	40020400 	.word	0x40020400
 80004a4:	40013800 	.word	0x40013800
 80004a8:	40013c00 	.word	0x40013c00

080004ac <EXTI9_5_IRQHandler>:

void EXTI9_5_IRQHandler(void) {
 80004ac:	b580      	push	{r7, lr}
 80004ae:	b082      	sub	sp, #8
 80004b0:	af00      	add	r7, sp, #0
    static uint32_t last_press_time = 0;
    uint32_t current_time = GetTick();
 80004b2:	f000 fd49 	bl	8000f48 <GetTick>
 80004b6:	6078      	str	r0, [r7, #4]

    // Chống rung
    if ((current_time - last_press_time) < 50) {
 80004b8:	4b38      	ldr	r3, [pc, #224]	@ (800059c <EXTI9_5_IRQHandler+0xf0>)
 80004ba:	681b      	ldr	r3, [r3, #0]
 80004bc:	687a      	ldr	r2, [r7, #4]
 80004be:	1ad3      	subs	r3, r2, r3
 80004c0:	2b31      	cmp	r3, #49	@ 0x31
 80004c2:	d806      	bhi.n	80004d2 <EXTI9_5_IRQHandler+0x26>
        EXTI->PR |= (1 << 6) | (1 << 7); // Clear pending
 80004c4:	4b36      	ldr	r3, [pc, #216]	@ (80005a0 <EXTI9_5_IRQHandler+0xf4>)
 80004c6:	695b      	ldr	r3, [r3, #20]
 80004c8:	4a35      	ldr	r2, [pc, #212]	@ (80005a0 <EXTI9_5_IRQHandler+0xf4>)
 80004ca:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 80004ce:	6153      	str	r3, [r2, #20]
        return;
 80004d0:	e060      	b.n	8000594 <EXTI9_5_IRQHandler+0xe8>
    }

    // Xử lý nút PA6 (EXTI6): Bật / Tắt hệ thống
    if (EXTI->PR & (1 << 6)) {
 80004d2:	4b33      	ldr	r3, [pc, #204]	@ (80005a0 <EXTI9_5_IRQHandler+0xf4>)
 80004d4:	695b      	ldr	r3, [r3, #20]
 80004d6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80004da:	2b00      	cmp	r3, #0
 80004dc:	d03d      	beq.n	800055a <EXTI9_5_IRQHandler+0xae>
        system_active ^= 1;
 80004de:	4b31      	ldr	r3, [pc, #196]	@ (80005a4 <EXTI9_5_IRQHandler+0xf8>)
 80004e0:	781b      	ldrb	r3, [r3, #0]
 80004e2:	b2db      	uxtb	r3, r3
 80004e4:	f083 0301 	eor.w	r3, r3, #1
 80004e8:	b2da      	uxtb	r2, r3
 80004ea:	4b2e      	ldr	r3, [pc, #184]	@ (80005a4 <EXTI9_5_IRQHandler+0xf8>)
 80004ec:	701a      	strb	r2, [r3, #0]

        if (!system_active) {
 80004ee:	4b2d      	ldr	r3, [pc, #180]	@ (80005a4 <EXTI9_5_IRQHandler+0xf8>)
 80004f0:	781b      	ldrb	r3, [r3, #0]
 80004f2:	b2db      	uxtb	r3, r3
 80004f4:	2b00      	cmp	r3, #0
 80004f6:	d118      	bne.n	800052a <EXTI9_5_IRQHandler+0x7e>
            // STOPPED: tắt toàn bộ
            countdown = 0;
 80004f8:	4b2b      	ldr	r3, [pc, #172]	@ (80005a8 <EXTI9_5_IRQHandler+0xfc>)
 80004fa:	2200      	movs	r2, #0
 80004fc:	701a      	strb	r2, [r3, #0]
            mode = 0;
 80004fe:	4b2b      	ldr	r3, [pc, #172]	@ (80005ac <EXTI9_5_IRQHandler+0x100>)
 8000500:	2200      	movs	r2, #0
 8000502:	701a      	strb	r2, [r3, #0]
            oled_state = 2; // SYSTEM STOPPED
 8000504:	4b2a      	ldr	r3, [pc, #168]	@ (80005b0 <EXTI9_5_IRQHandler+0x104>)
 8000506:	2202      	movs	r2, #2
 8000508:	701a      	strb	r2, [r3, #0]

            GPIOA->ODR &= ~((1 << 1) | (1 << 2) | (1 << 3)); // Tắt LED
 800050a:	4b2a      	ldr	r3, [pc, #168]	@ (80005b4 <EXTI9_5_IRQHandler+0x108>)
 800050c:	695b      	ldr	r3, [r3, #20]
 800050e:	4a29      	ldr	r2, [pc, #164]	@ (80005b4 <EXTI9_5_IRQHandler+0x108>)
 8000510:	f023 030e 	bic.w	r3, r3, #14
 8000514:	6153      	str	r3, [r2, #20]
            TIM4->CCR2 = 0; // Tắt PWM
 8000516:	4b28      	ldr	r3, [pc, #160]	@ (80005b8 <EXTI9_5_IRQHandler+0x10c>)
 8000518:	2200      	movs	r2, #0
 800051a:	639a      	str	r2, [r3, #56]	@ 0x38

            // ❌ Vô hiệu hóa các ngắt khác
            EXTI->IMR &= ~((1 << 7) | (1 << 0) | (1 << 1));
 800051c:	4b20      	ldr	r3, [pc, #128]	@ (80005a0 <EXTI9_5_IRQHandler+0xf4>)
 800051e:	681b      	ldr	r3, [r3, #0]
 8000520:	4a1f      	ldr	r2, [pc, #124]	@ (80005a0 <EXTI9_5_IRQHandler+0xf4>)
 8000522:	f023 0383 	bic.w	r3, r3, #131	@ 0x83
 8000526:	6013      	str	r3, [r2, #0]
 8000528:	e00e      	b.n	8000548 <EXTI9_5_IRQHandler+0x9c>
        } else {
            // Trở lại hoạt động → INFINITE
            countdown = 0;
 800052a:	4b1f      	ldr	r3, [pc, #124]	@ (80005a8 <EXTI9_5_IRQHandler+0xfc>)
 800052c:	2200      	movs	r2, #0
 800052e:	701a      	strb	r2, [r3, #0]
            mode = 1;
 8000530:	4b1e      	ldr	r3, [pc, #120]	@ (80005ac <EXTI9_5_IRQHandler+0x100>)
 8000532:	2201      	movs	r2, #1
 8000534:	701a      	strb	r2, [r3, #0]
            oled_state = 3; // SYSTEM ACTIVE - INFINITE
 8000536:	4b1e      	ldr	r3, [pc, #120]	@ (80005b0 <EXTI9_5_IRQHandler+0x104>)
 8000538:	2203      	movs	r2, #3
 800053a:	701a      	strb	r2, [r3, #0]

            // ✅ Bật lại các ngắt
            EXTI->IMR |= (1 << 7) | (1 << 0) | (1 << 1);
 800053c:	4b18      	ldr	r3, [pc, #96]	@ (80005a0 <EXTI9_5_IRQHandler+0xf4>)
 800053e:	681b      	ldr	r3, [r3, #0]
 8000540:	4a17      	ldr	r2, [pc, #92]	@ (80005a0 <EXTI9_5_IRQHandler+0xf4>)
 8000542:	f043 0383 	orr.w	r3, r3, #131	@ 0x83
 8000546:	6013      	str	r3, [r2, #0]
        }

        button_pressed = 1;
 8000548:	4b1c      	ldr	r3, [pc, #112]	@ (80005bc <EXTI9_5_IRQHandler+0x110>)
 800054a:	2201      	movs	r2, #1
 800054c:	701a      	strb	r2, [r3, #0]
        EXTI->PR |= (1 << 6); // Clear pending
 800054e:	4b14      	ldr	r3, [pc, #80]	@ (80005a0 <EXTI9_5_IRQHandler+0xf4>)
 8000550:	695b      	ldr	r3, [r3, #20]
 8000552:	4a13      	ldr	r2, [pc, #76]	@ (80005a0 <EXTI9_5_IRQHandler+0xf4>)
 8000554:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000558:	6153      	str	r3, [r2, #20]
    }

    // Xử lý nút PA7 (EXTI7): Chỉ cho phép nếu hệ thống đang hoạt động
    if (EXTI->PR & (1 << 7)) {
 800055a:	4b11      	ldr	r3, [pc, #68]	@ (80005a0 <EXTI9_5_IRQHandler+0xf4>)
 800055c:	695b      	ldr	r3, [r3, #20]
 800055e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000562:	2b00      	cmp	r3, #0
 8000564:	d013      	beq.n	800058e <EXTI9_5_IRQHandler+0xe2>
        if (system_active) {
 8000566:	4b0f      	ldr	r3, [pc, #60]	@ (80005a4 <EXTI9_5_IRQHandler+0xf8>)
 8000568:	781b      	ldrb	r3, [r3, #0]
 800056a:	b2db      	uxtb	r3, r3
 800056c:	2b00      	cmp	r3, #0
 800056e:	d008      	beq.n	8000582 <EXTI9_5_IRQHandler+0xd6>
            countdown = 10;
 8000570:	4b0d      	ldr	r3, [pc, #52]	@ (80005a8 <EXTI9_5_IRQHandler+0xfc>)
 8000572:	220a      	movs	r2, #10
 8000574:	701a      	strb	r2, [r3, #0]
            oled_state = 1; // COUNTDOWN mode
 8000576:	4b0e      	ldr	r3, [pc, #56]	@ (80005b0 <EXTI9_5_IRQHandler+0x104>)
 8000578:	2201      	movs	r2, #1
 800057a:	701a      	strb	r2, [r3, #0]
            button_pressed = 1;
 800057c:	4b0f      	ldr	r3, [pc, #60]	@ (80005bc <EXTI9_5_IRQHandler+0x110>)
 800057e:	2201      	movs	r2, #1
 8000580:	701a      	strb	r2, [r3, #0]
        }
        EXTI->PR |= (1 << 7); // Clear pending
 8000582:	4b07      	ldr	r3, [pc, #28]	@ (80005a0 <EXTI9_5_IRQHandler+0xf4>)
 8000584:	695b      	ldr	r3, [r3, #20]
 8000586:	4a06      	ldr	r2, [pc, #24]	@ (80005a0 <EXTI9_5_IRQHandler+0xf4>)
 8000588:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800058c:	6153      	str	r3, [r2, #20]
    }

    last_press_time = current_time;
 800058e:	4a03      	ldr	r2, [pc, #12]	@ (800059c <EXTI9_5_IRQHandler+0xf0>)
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	6013      	str	r3, [r2, #0]
}
 8000594:	3708      	adds	r7, #8
 8000596:	46bd      	mov	sp, r7
 8000598:	bd80      	pop	{r7, pc}
 800059a:	bf00      	nop
 800059c:	20000074 	.word	0x20000074
 80005a0:	40013c00 	.word	0x40013c00
 80005a4:	20000001 	.word	0x20000001
 80005a8:	20000070 	.word	0x20000070
 80005ac:	20000000 	.word	0x20000000
 80005b0:	20000002 	.word	0x20000002
 80005b4:	40020000 	.word	0x40020000
 80005b8:	40000800 	.word	0x40000800
 80005bc:	20000071 	.word	0x20000071

080005c0 <EXTI0_IRQHandler>:


void EXTI0_IRQHandler(void) {
 80005c0:	b580      	push	{r7, lr}
 80005c2:	b082      	sub	sp, #8
 80005c4:	af00      	add	r7, sp, #0
    static uint32_t last_press_time = 0;
    uint32_t current_time = GetTick();
 80005c6:	f000 fcbf 	bl	8000f48 <GetTick>
 80005ca:	6078      	str	r0, [r7, #4]
    if ((current_time - last_press_time) > 50) {
 80005cc:	4b0d      	ldr	r3, [pc, #52]	@ (8000604 <EXTI0_IRQHandler+0x44>)
 80005ce:	681b      	ldr	r3, [r3, #0]
 80005d0:	687a      	ldr	r2, [r7, #4]
 80005d2:	1ad3      	subs	r3, r2, r3
 80005d4:	2b32      	cmp	r3, #50	@ 0x32
 80005d6:	d90b      	bls.n	80005f0 <EXTI0_IRQHandler+0x30>
        countdown = 20;
 80005d8:	4b0b      	ldr	r3, [pc, #44]	@ (8000608 <EXTI0_IRQHandler+0x48>)
 80005da:	2214      	movs	r2, #20
 80005dc:	701a      	strb	r2, [r3, #0]
        oled_state = 1;
 80005de:	4b0b      	ldr	r3, [pc, #44]	@ (800060c <EXTI0_IRQHandler+0x4c>)
 80005e0:	2201      	movs	r2, #1
 80005e2:	701a      	strb	r2, [r3, #0]
        button_pressed = 1;
 80005e4:	4b0a      	ldr	r3, [pc, #40]	@ (8000610 <EXTI0_IRQHandler+0x50>)
 80005e6:	2201      	movs	r2, #1
 80005e8:	701a      	strb	r2, [r3, #0]
        last_press_time = current_time;
 80005ea:	4a06      	ldr	r2, [pc, #24]	@ (8000604 <EXTI0_IRQHandler+0x44>)
 80005ec:	687b      	ldr	r3, [r7, #4]
 80005ee:	6013      	str	r3, [r2, #0]
    }
    EXTI->PR |= (1 << 0);
 80005f0:	4b08      	ldr	r3, [pc, #32]	@ (8000614 <EXTI0_IRQHandler+0x54>)
 80005f2:	695b      	ldr	r3, [r3, #20]
 80005f4:	4a07      	ldr	r2, [pc, #28]	@ (8000614 <EXTI0_IRQHandler+0x54>)
 80005f6:	f043 0301 	orr.w	r3, r3, #1
 80005fa:	6153      	str	r3, [r2, #20]
}
 80005fc:	bf00      	nop
 80005fe:	3708      	adds	r7, #8
 8000600:	46bd      	mov	sp, r7
 8000602:	bd80      	pop	{r7, pc}
 8000604:	20000078 	.word	0x20000078
 8000608:	20000070 	.word	0x20000070
 800060c:	20000002 	.word	0x20000002
 8000610:	20000071 	.word	0x20000071
 8000614:	40013c00 	.word	0x40013c00

08000618 <EXTI1_IRQHandler>:

void EXTI1_IRQHandler(void) {
 8000618:	b580      	push	{r7, lr}
 800061a:	b082      	sub	sp, #8
 800061c:	af00      	add	r7, sp, #0
    static uint32_t last_press_time = 0;
    uint32_t current_time = GetTick();
 800061e:	f000 fc93 	bl	8000f48 <GetTick>
 8000622:	6078      	str	r0, [r7, #4]
    if ((current_time - last_press_time) > 50) {
 8000624:	4b0d      	ldr	r3, [pc, #52]	@ (800065c <EXTI1_IRQHandler+0x44>)
 8000626:	681b      	ldr	r3, [r3, #0]
 8000628:	687a      	ldr	r2, [r7, #4]
 800062a:	1ad3      	subs	r3, r2, r3
 800062c:	2b32      	cmp	r3, #50	@ 0x32
 800062e:	d90b      	bls.n	8000648 <EXTI1_IRQHandler+0x30>
        countdown = 30;
 8000630:	4b0b      	ldr	r3, [pc, #44]	@ (8000660 <EXTI1_IRQHandler+0x48>)
 8000632:	221e      	movs	r2, #30
 8000634:	701a      	strb	r2, [r3, #0]
        oled_state = 1;
 8000636:	4b0b      	ldr	r3, [pc, #44]	@ (8000664 <EXTI1_IRQHandler+0x4c>)
 8000638:	2201      	movs	r2, #1
 800063a:	701a      	strb	r2, [r3, #0]
        button_pressed = 1;
 800063c:	4b0a      	ldr	r3, [pc, #40]	@ (8000668 <EXTI1_IRQHandler+0x50>)
 800063e:	2201      	movs	r2, #1
 8000640:	701a      	strb	r2, [r3, #0]
        last_press_time = current_time;
 8000642:	4a06      	ldr	r2, [pc, #24]	@ (800065c <EXTI1_IRQHandler+0x44>)
 8000644:	687b      	ldr	r3, [r7, #4]
 8000646:	6013      	str	r3, [r2, #0]
    }
    EXTI->PR |= (1 << 1);
 8000648:	4b08      	ldr	r3, [pc, #32]	@ (800066c <EXTI1_IRQHandler+0x54>)
 800064a:	695b      	ldr	r3, [r3, #20]
 800064c:	4a07      	ldr	r2, [pc, #28]	@ (800066c <EXTI1_IRQHandler+0x54>)
 800064e:	f043 0302 	orr.w	r3, r3, #2
 8000652:	6153      	str	r3, [r2, #20]
}
 8000654:	bf00      	nop
 8000656:	3708      	adds	r7, #8
 8000658:	46bd      	mov	sp, r7
 800065a:	bd80      	pop	{r7, pc}
 800065c:	2000007c 	.word	0x2000007c
 8000660:	20000070 	.word	0x20000070
 8000664:	20000002 	.word	0x20000002
 8000668:	20000071 	.word	0x20000071
 800066c:	40013c00 	.word	0x40013c00

08000670 <I2C1_Init>:
#include "stm32f4xx.h"
#include "i2c.h"

#define I2C_TIMEOUT 100000

void I2C1_Init(void) {
 8000670:	b480      	push	{r7}
 8000672:	af00      	add	r7, sp, #0
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOBEN;
 8000674:	4b24      	ldr	r3, [pc, #144]	@ (8000708 <I2C1_Init+0x98>)
 8000676:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000678:	4a23      	ldr	r2, [pc, #140]	@ (8000708 <I2C1_Init+0x98>)
 800067a:	f043 0302 	orr.w	r3, r3, #2
 800067e:	6313      	str	r3, [r2, #48]	@ 0x30
    RCC->APB1ENR |= RCC_APB1ENR_I2C1EN;
 8000680:	4b21      	ldr	r3, [pc, #132]	@ (8000708 <I2C1_Init+0x98>)
 8000682:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000684:	4a20      	ldr	r2, [pc, #128]	@ (8000708 <I2C1_Init+0x98>)
 8000686:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 800068a:	6413      	str	r3, [r2, #64]	@ 0x40

    GPIOB->MODER &= ~(0xF << (8*2));
 800068c:	4b1f      	ldr	r3, [pc, #124]	@ (800070c <I2C1_Init+0x9c>)
 800068e:	681b      	ldr	r3, [r3, #0]
 8000690:	4a1e      	ldr	r2, [pc, #120]	@ (800070c <I2C1_Init+0x9c>)
 8000692:	f423 2370 	bic.w	r3, r3, #983040	@ 0xf0000
 8000696:	6013      	str	r3, [r2, #0]
    GPIOB->MODER |=  (0xA << (8*2));
 8000698:	4b1c      	ldr	r3, [pc, #112]	@ (800070c <I2C1_Init+0x9c>)
 800069a:	681b      	ldr	r3, [r3, #0]
 800069c:	4a1b      	ldr	r2, [pc, #108]	@ (800070c <I2C1_Init+0x9c>)
 800069e:	f443 2320 	orr.w	r3, r3, #655360	@ 0xa0000
 80006a2:	6013      	str	r3, [r2, #0]
    GPIOB->OTYPER |= (0x3 << 8);
 80006a4:	4b19      	ldr	r3, [pc, #100]	@ (800070c <I2C1_Init+0x9c>)
 80006a6:	685b      	ldr	r3, [r3, #4]
 80006a8:	4a18      	ldr	r2, [pc, #96]	@ (800070c <I2C1_Init+0x9c>)
 80006aa:	f443 7340 	orr.w	r3, r3, #768	@ 0x300
 80006ae:	6053      	str	r3, [r2, #4]
    GPIOB->OSPEEDR |= (0xF << (8*2));
 80006b0:	4b16      	ldr	r3, [pc, #88]	@ (800070c <I2C1_Init+0x9c>)
 80006b2:	689b      	ldr	r3, [r3, #8]
 80006b4:	4a15      	ldr	r2, [pc, #84]	@ (800070c <I2C1_Init+0x9c>)
 80006b6:	f443 2370 	orr.w	r3, r3, #983040	@ 0xf0000
 80006ba:	6093      	str	r3, [r2, #8]
    GPIOB->PUPDR |= (0x5 << (8*2));
 80006bc:	4b13      	ldr	r3, [pc, #76]	@ (800070c <I2C1_Init+0x9c>)
 80006be:	68db      	ldr	r3, [r3, #12]
 80006c0:	4a12      	ldr	r2, [pc, #72]	@ (800070c <I2C1_Init+0x9c>)
 80006c2:	f443 23a0 	orr.w	r3, r3, #327680	@ 0x50000
 80006c6:	60d3      	str	r3, [r2, #12]
    GPIOB->AFR[1] |= (0x44 << ((8-8)*4));
 80006c8:	4b10      	ldr	r3, [pc, #64]	@ (800070c <I2C1_Init+0x9c>)
 80006ca:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80006cc:	4a0f      	ldr	r2, [pc, #60]	@ (800070c <I2C1_Init+0x9c>)
 80006ce:	f043 0344 	orr.w	r3, r3, #68	@ 0x44
 80006d2:	6253      	str	r3, [r2, #36]	@ 0x24

    I2C1->CR1 &= ~I2C_CR1_PE;
 80006d4:	4b0e      	ldr	r3, [pc, #56]	@ (8000710 <I2C1_Init+0xa0>)
 80006d6:	681b      	ldr	r3, [r3, #0]
 80006d8:	4a0d      	ldr	r2, [pc, #52]	@ (8000710 <I2C1_Init+0xa0>)
 80006da:	f023 0301 	bic.w	r3, r3, #1
 80006de:	6013      	str	r3, [r2, #0]
    I2C1->CR2 = 16;
 80006e0:	4b0b      	ldr	r3, [pc, #44]	@ (8000710 <I2C1_Init+0xa0>)
 80006e2:	2210      	movs	r2, #16
 80006e4:	605a      	str	r2, [r3, #4]
    I2C1->CCR = 80;
 80006e6:	4b0a      	ldr	r3, [pc, #40]	@ (8000710 <I2C1_Init+0xa0>)
 80006e8:	2250      	movs	r2, #80	@ 0x50
 80006ea:	61da      	str	r2, [r3, #28]
    I2C1->TRISE = 17;
 80006ec:	4b08      	ldr	r3, [pc, #32]	@ (8000710 <I2C1_Init+0xa0>)
 80006ee:	2211      	movs	r2, #17
 80006f0:	621a      	str	r2, [r3, #32]
    I2C1->CR1 |= I2C_CR1_PE;
 80006f2:	4b07      	ldr	r3, [pc, #28]	@ (8000710 <I2C1_Init+0xa0>)
 80006f4:	681b      	ldr	r3, [r3, #0]
 80006f6:	4a06      	ldr	r2, [pc, #24]	@ (8000710 <I2C1_Init+0xa0>)
 80006f8:	f043 0301 	orr.w	r3, r3, #1
 80006fc:	6013      	str	r3, [r2, #0]
}
 80006fe:	bf00      	nop
 8000700:	46bd      	mov	sp, r7
 8000702:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000706:	4770      	bx	lr
 8000708:	40023800 	.word	0x40023800
 800070c:	40020400 	.word	0x40020400
 8000710:	40005400 	.word	0x40005400

08000714 <I2C_WriteByte>:

uint8_t I2C_WriteByte(uint8_t addr, uint8_t reg, uint8_t data) {
 8000714:	b480      	push	{r7}
 8000716:	b085      	sub	sp, #20
 8000718:	af00      	add	r7, sp, #0
 800071a:	4603      	mov	r3, r0
 800071c:	71fb      	strb	r3, [r7, #7]
 800071e:	460b      	mov	r3, r1
 8000720:	71bb      	strb	r3, [r7, #6]
 8000722:	4613      	mov	r3, r2
 8000724:	717b      	strb	r3, [r7, #5]
    uint32_t timeout;
    I2C1->CR1 |= I2C_CR1_START;
 8000726:	4b41      	ldr	r3, [pc, #260]	@ (800082c <I2C_WriteByte+0x118>)
 8000728:	681b      	ldr	r3, [r3, #0]
 800072a:	4a40      	ldr	r2, [pc, #256]	@ (800082c <I2C_WriteByte+0x118>)
 800072c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000730:	6013      	str	r3, [r2, #0]
    timeout = I2C_TIMEOUT;
 8000732:	4b3f      	ldr	r3, [pc, #252]	@ (8000830 <I2C_WriteByte+0x11c>)
 8000734:	60fb      	str	r3, [r7, #12]
    while(!(I2C1->SR1 & I2C_SR1_SB) && --timeout);
 8000736:	bf00      	nop
 8000738:	4b3c      	ldr	r3, [pc, #240]	@ (800082c <I2C_WriteByte+0x118>)
 800073a:	695b      	ldr	r3, [r3, #20]
 800073c:	f003 0301 	and.w	r3, r3, #1
 8000740:	2b00      	cmp	r3, #0
 8000742:	d105      	bne.n	8000750 <I2C_WriteByte+0x3c>
 8000744:	68fb      	ldr	r3, [r7, #12]
 8000746:	3b01      	subs	r3, #1
 8000748:	60fb      	str	r3, [r7, #12]
 800074a:	68fb      	ldr	r3, [r7, #12]
 800074c:	2b00      	cmp	r3, #0
 800074e:	d1f3      	bne.n	8000738 <I2C_WriteByte+0x24>
    if (!timeout) return 0;
 8000750:	68fb      	ldr	r3, [r7, #12]
 8000752:	2b00      	cmp	r3, #0
 8000754:	d101      	bne.n	800075a <I2C_WriteByte+0x46>
 8000756:	2300      	movs	r3, #0
 8000758:	e062      	b.n	8000820 <I2C_WriteByte+0x10c>

    I2C1->DR = addr << 1;
 800075a:	79fb      	ldrb	r3, [r7, #7]
 800075c:	4a33      	ldr	r2, [pc, #204]	@ (800082c <I2C_WriteByte+0x118>)
 800075e:	005b      	lsls	r3, r3, #1
 8000760:	6113      	str	r3, [r2, #16]
    timeout = I2C_TIMEOUT;
 8000762:	4b33      	ldr	r3, [pc, #204]	@ (8000830 <I2C_WriteByte+0x11c>)
 8000764:	60fb      	str	r3, [r7, #12]
    while(!(I2C1->SR1 & I2C_SR1_ADDR) && --timeout);
 8000766:	bf00      	nop
 8000768:	4b30      	ldr	r3, [pc, #192]	@ (800082c <I2C_WriteByte+0x118>)
 800076a:	695b      	ldr	r3, [r3, #20]
 800076c:	f003 0302 	and.w	r3, r3, #2
 8000770:	2b00      	cmp	r3, #0
 8000772:	d105      	bne.n	8000780 <I2C_WriteByte+0x6c>
 8000774:	68fb      	ldr	r3, [r7, #12]
 8000776:	3b01      	subs	r3, #1
 8000778:	60fb      	str	r3, [r7, #12]
 800077a:	68fb      	ldr	r3, [r7, #12]
 800077c:	2b00      	cmp	r3, #0
 800077e:	d1f3      	bne.n	8000768 <I2C_WriteByte+0x54>
    if (!timeout) return 0;
 8000780:	68fb      	ldr	r3, [r7, #12]
 8000782:	2b00      	cmp	r3, #0
 8000784:	d101      	bne.n	800078a <I2C_WriteByte+0x76>
 8000786:	2300      	movs	r3, #0
 8000788:	e04a      	b.n	8000820 <I2C_WriteByte+0x10c>
    (void)I2C1->SR2;
 800078a:	4b28      	ldr	r3, [pc, #160]	@ (800082c <I2C_WriteByte+0x118>)
 800078c:	699b      	ldr	r3, [r3, #24]

    timeout = I2C_TIMEOUT;
 800078e:	4b28      	ldr	r3, [pc, #160]	@ (8000830 <I2C_WriteByte+0x11c>)
 8000790:	60fb      	str	r3, [r7, #12]
    while(!(I2C1->SR1 & I2C_SR1_TXE) && --timeout);
 8000792:	bf00      	nop
 8000794:	4b25      	ldr	r3, [pc, #148]	@ (800082c <I2C_WriteByte+0x118>)
 8000796:	695b      	ldr	r3, [r3, #20]
 8000798:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800079c:	2b00      	cmp	r3, #0
 800079e:	d105      	bne.n	80007ac <I2C_WriteByte+0x98>
 80007a0:	68fb      	ldr	r3, [r7, #12]
 80007a2:	3b01      	subs	r3, #1
 80007a4:	60fb      	str	r3, [r7, #12]
 80007a6:	68fb      	ldr	r3, [r7, #12]
 80007a8:	2b00      	cmp	r3, #0
 80007aa:	d1f3      	bne.n	8000794 <I2C_WriteByte+0x80>
    if (!timeout) return 0;
 80007ac:	68fb      	ldr	r3, [r7, #12]
 80007ae:	2b00      	cmp	r3, #0
 80007b0:	d101      	bne.n	80007b6 <I2C_WriteByte+0xa2>
 80007b2:	2300      	movs	r3, #0
 80007b4:	e034      	b.n	8000820 <I2C_WriteByte+0x10c>
    I2C1->DR = reg;
 80007b6:	4a1d      	ldr	r2, [pc, #116]	@ (800082c <I2C_WriteByte+0x118>)
 80007b8:	79bb      	ldrb	r3, [r7, #6]
 80007ba:	6113      	str	r3, [r2, #16]

    timeout = I2C_TIMEOUT;
 80007bc:	4b1c      	ldr	r3, [pc, #112]	@ (8000830 <I2C_WriteByte+0x11c>)
 80007be:	60fb      	str	r3, [r7, #12]
    while(!(I2C1->SR1 & I2C_SR1_TXE) && --timeout);
 80007c0:	bf00      	nop
 80007c2:	4b1a      	ldr	r3, [pc, #104]	@ (800082c <I2C_WriteByte+0x118>)
 80007c4:	695b      	ldr	r3, [r3, #20]
 80007c6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80007ca:	2b00      	cmp	r3, #0
 80007cc:	d105      	bne.n	80007da <I2C_WriteByte+0xc6>
 80007ce:	68fb      	ldr	r3, [r7, #12]
 80007d0:	3b01      	subs	r3, #1
 80007d2:	60fb      	str	r3, [r7, #12]
 80007d4:	68fb      	ldr	r3, [r7, #12]
 80007d6:	2b00      	cmp	r3, #0
 80007d8:	d1f3      	bne.n	80007c2 <I2C_WriteByte+0xae>
    if (!timeout) return 0;
 80007da:	68fb      	ldr	r3, [r7, #12]
 80007dc:	2b00      	cmp	r3, #0
 80007de:	d101      	bne.n	80007e4 <I2C_WriteByte+0xd0>
 80007e0:	2300      	movs	r3, #0
 80007e2:	e01d      	b.n	8000820 <I2C_WriteByte+0x10c>
    I2C1->DR = data;
 80007e4:	4a11      	ldr	r2, [pc, #68]	@ (800082c <I2C_WriteByte+0x118>)
 80007e6:	797b      	ldrb	r3, [r7, #5]
 80007e8:	6113      	str	r3, [r2, #16]

    timeout = I2C_TIMEOUT;
 80007ea:	4b11      	ldr	r3, [pc, #68]	@ (8000830 <I2C_WriteByte+0x11c>)
 80007ec:	60fb      	str	r3, [r7, #12]
    while(!(I2C1->SR1 & I2C_SR1_BTF) && --timeout);
 80007ee:	bf00      	nop
 80007f0:	4b0e      	ldr	r3, [pc, #56]	@ (800082c <I2C_WriteByte+0x118>)
 80007f2:	695b      	ldr	r3, [r3, #20]
 80007f4:	f003 0304 	and.w	r3, r3, #4
 80007f8:	2b00      	cmp	r3, #0
 80007fa:	d105      	bne.n	8000808 <I2C_WriteByte+0xf4>
 80007fc:	68fb      	ldr	r3, [r7, #12]
 80007fe:	3b01      	subs	r3, #1
 8000800:	60fb      	str	r3, [r7, #12]
 8000802:	68fb      	ldr	r3, [r7, #12]
 8000804:	2b00      	cmp	r3, #0
 8000806:	d1f3      	bne.n	80007f0 <I2C_WriteByte+0xdc>
    if (!timeout) return 0;
 8000808:	68fb      	ldr	r3, [r7, #12]
 800080a:	2b00      	cmp	r3, #0
 800080c:	d101      	bne.n	8000812 <I2C_WriteByte+0xfe>
 800080e:	2300      	movs	r3, #0
 8000810:	e006      	b.n	8000820 <I2C_WriteByte+0x10c>
    I2C1->CR1 |= I2C_CR1_STOP;
 8000812:	4b06      	ldr	r3, [pc, #24]	@ (800082c <I2C_WriteByte+0x118>)
 8000814:	681b      	ldr	r3, [r3, #0]
 8000816:	4a05      	ldr	r2, [pc, #20]	@ (800082c <I2C_WriteByte+0x118>)
 8000818:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800081c:	6013      	str	r3, [r2, #0]

    return 1;
 800081e:	2301      	movs	r3, #1
}
 8000820:	4618      	mov	r0, r3
 8000822:	3714      	adds	r7, #20
 8000824:	46bd      	mov	sp, r7
 8000826:	f85d 7b04 	ldr.w	r7, [sp], #4
 800082a:	4770      	bx	lr
 800082c:	40005400 	.word	0x40005400
 8000830:	000186a0 	.word	0x000186a0

08000834 <LED_Init>:
 8000834:	b480      	push	{r7}
 8000836:	af00      	add	r7, sp, #0
 8000838:	4b11      	ldr	r3, [pc, #68]	@ (8000880 <LED_Init+0x4c>)
 800083a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800083c:	4a10      	ldr	r2, [pc, #64]	@ (8000880 <LED_Init+0x4c>)
 800083e:	f043 0301 	orr.w	r3, r3, #1
 8000842:	6313      	str	r3, [r2, #48]	@ 0x30
 8000844:	4b0f      	ldr	r3, [pc, #60]	@ (8000884 <LED_Init+0x50>)
 8000846:	681b      	ldr	r3, [r3, #0]
 8000848:	4a0e      	ldr	r2, [pc, #56]	@ (8000884 <LED_Init+0x50>)
 800084a:	f023 03fc 	bic.w	r3, r3, #252	@ 0xfc
 800084e:	6013      	str	r3, [r2, #0]
 8000850:	4b0c      	ldr	r3, [pc, #48]	@ (8000884 <LED_Init+0x50>)
 8000852:	681b      	ldr	r3, [r3, #0]
 8000854:	4a0b      	ldr	r2, [pc, #44]	@ (8000884 <LED_Init+0x50>)
 8000856:	f043 0354 	orr.w	r3, r3, #84	@ 0x54
 800085a:	6013      	str	r3, [r2, #0]
 800085c:	4b09      	ldr	r3, [pc, #36]	@ (8000884 <LED_Init+0x50>)
 800085e:	685b      	ldr	r3, [r3, #4]
 8000860:	4a08      	ldr	r2, [pc, #32]	@ (8000884 <LED_Init+0x50>)
 8000862:	f023 030e 	bic.w	r3, r3, #14
 8000866:	6053      	str	r3, [r2, #4]
 8000868:	4b06      	ldr	r3, [pc, #24]	@ (8000884 <LED_Init+0x50>)
 800086a:	689b      	ldr	r3, [r3, #8]
 800086c:	4a05      	ldr	r2, [pc, #20]	@ (8000884 <LED_Init+0x50>)
 800086e:	f023 03fc 	bic.w	r3, r3, #252	@ 0xfc
 8000872:	6093      	str	r3, [r2, #8]
 8000874:	bf00      	nop
 8000876:	46bd      	mov	sp, r7
 8000878:	f85d 7b04 	ldr.w	r7, [sp], #4
 800087c:	4770      	bx	lr
 800087e:	bf00      	nop
 8000880:	40023800 	.word	0x40023800
 8000884:	40020000 	.word	0x40020000

08000888 <LED_Update>:
 8000888:	b480      	push	{r7}
 800088a:	b083      	sub	sp, #12
 800088c:	af00      	add	r7, sp, #0
 800088e:	4603      	mov	r3, r0
 8000890:	71fb      	strb	r3, [r7, #7]
 8000892:	4b16      	ldr	r3, [pc, #88]	@ (80008ec <LED_Update+0x64>)
 8000894:	695b      	ldr	r3, [r3, #20]
 8000896:	4a15      	ldr	r2, [pc, #84]	@ (80008ec <LED_Update+0x64>)
 8000898:	f023 030e 	bic.w	r3, r3, #14
 800089c:	6153      	str	r3, [r2, #20]
 800089e:	79fb      	ldrb	r3, [r7, #7]
 80008a0:	2b03      	cmp	r3, #3
 80008a2:	d014      	beq.n	80008ce <LED_Update+0x46>
 80008a4:	2b03      	cmp	r3, #3
 80008a6:	dc19      	bgt.n	80008dc <LED_Update+0x54>
 80008a8:	2b01      	cmp	r3, #1
 80008aa:	d002      	beq.n	80008b2 <LED_Update+0x2a>
 80008ac:	2b02      	cmp	r3, #2
 80008ae:	d007      	beq.n	80008c0 <LED_Update+0x38>
 80008b0:	e014      	b.n	80008dc <LED_Update+0x54>
 80008b2:	4b0e      	ldr	r3, [pc, #56]	@ (80008ec <LED_Update+0x64>)
 80008b4:	695b      	ldr	r3, [r3, #20]
 80008b6:	4a0d      	ldr	r2, [pc, #52]	@ (80008ec <LED_Update+0x64>)
 80008b8:	f043 0302 	orr.w	r3, r3, #2
 80008bc:	6153      	str	r3, [r2, #20]
 80008be:	e00e      	b.n	80008de <LED_Update+0x56>
 80008c0:	4b0a      	ldr	r3, [pc, #40]	@ (80008ec <LED_Update+0x64>)
 80008c2:	695b      	ldr	r3, [r3, #20]
 80008c4:	4a09      	ldr	r2, [pc, #36]	@ (80008ec <LED_Update+0x64>)
 80008c6:	f043 0304 	orr.w	r3, r3, #4
 80008ca:	6153      	str	r3, [r2, #20]
 80008cc:	e007      	b.n	80008de <LED_Update+0x56>
 80008ce:	4b07      	ldr	r3, [pc, #28]	@ (80008ec <LED_Update+0x64>)
 80008d0:	695b      	ldr	r3, [r3, #20]
 80008d2:	4a06      	ldr	r2, [pc, #24]	@ (80008ec <LED_Update+0x64>)
 80008d4:	f043 0308 	orr.w	r3, r3, #8
 80008d8:	6153      	str	r3, [r2, #20]
 80008da:	e000      	b.n	80008de <LED_Update+0x56>
 80008dc:	bf00      	nop
 80008de:	bf00      	nop
 80008e0:	370c      	adds	r7, #12
 80008e2:	46bd      	mov	sp, r7
 80008e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008e8:	4770      	bx	lr
 80008ea:	bf00      	nop
 80008ec:	40020000 	.word	0x40020000

080008f0 <main>:
 80008f0:	b580      	push	{r7, lr}
 80008f2:	b088      	sub	sp, #32
 80008f4:	af00      	add	r7, sp, #0
 80008f6:	f000 faed 	bl	8000ed4 <SysTick_Init>
 80008fa:	f7ff feb9 	bl	8000670 <I2C1_Init>
 80008fe:	f7ff fcc7 	bl	8000290 <ADC_Init>
 8000902:	f000 fa39 	bl	8000d78 <PWM_Init>
 8000906:	f7ff ff95 	bl	8000834 <LED_Init>
 800090a:	f7ff fd71 	bl	80003f0 <GPIO_EXTI_Init>
 800090e:	f000 f907 	bl	8000b20 <SSD1306_Init>
 8000912:	4603      	mov	r3, r0
 8000914:	2b00      	cmp	r3, #0
 8000916:	d10a      	bne.n	800092e <main+0x3e>
 8000918:	4b66      	ldr	r3, [pc, #408]	@ (8000ab4 <main+0x1c4>)
 800091a:	695b      	ldr	r3, [r3, #20]
 800091c:	4a65      	ldr	r2, [pc, #404]	@ (8000ab4 <main+0x1c4>)
 800091e:	f083 0302 	eor.w	r3, r3, #2
 8000922:	6153      	str	r3, [r2, #20]
 8000924:	20c8      	movs	r0, #200	@ 0xc8
 8000926:	f000 faf7 	bl	8000f18 <Delay_ms>
 800092a:	bf00      	nop
 800092c:	e7f4      	b.n	8000918 <main+0x28>
 800092e:	f000 f944 	bl	8000bba <SSD1306_Clear>
 8000932:	4961      	ldr	r1, [pc, #388]	@ (8000ab8 <main+0x1c8>)
 8000934:	2003      	movs	r0, #3
 8000936:	f000 f9b5 	bl	8000ca4 <SSD1306_PrintTextCentered>
 800093a:	f44f 60fa 	mov.w	r0, #2000	@ 0x7d0
 800093e:	f000 faeb 	bl	8000f18 <Delay_ms>
 8000942:	4b5e      	ldr	r3, [pc, #376]	@ (8000abc <main+0x1cc>)
 8000944:	2203      	movs	r2, #3
 8000946:	701a      	strb	r2, [r3, #0]
 8000948:	2300      	movs	r3, #0
 800094a:	61fb      	str	r3, [r7, #28]
 800094c:	2300      	movs	r3, #0
 800094e:	61bb      	str	r3, [r7, #24]
 8000950:	2300      	movs	r3, #0
 8000952:	617b      	str	r3, [r7, #20]
 8000954:	f000 faf8 	bl	8000f48 <GetTick>
 8000958:	6138      	str	r0, [r7, #16]
 800095a:	693a      	ldr	r2, [r7, #16]
 800095c:	697b      	ldr	r3, [r7, #20]
 800095e:	1ad3      	subs	r3, r2, r3
 8000960:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 8000964:	d340      	bcc.n	80009e8 <main+0xf8>
 8000966:	4b55      	ldr	r3, [pc, #340]	@ (8000abc <main+0x1cc>)
 8000968:	781b      	ldrb	r3, [r3, #0]
 800096a:	b2db      	uxtb	r3, r3
 800096c:	2b03      	cmp	r3, #3
 800096e:	d839      	bhi.n	80009e4 <main+0xf4>
 8000970:	a201      	add	r2, pc, #4	@ (adr r2, 8000978 <main+0x88>)
 8000972:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000976:	bf00      	nop
 8000978:	08000989 	.word	0x08000989
 800097c:	08000997 	.word	0x08000997
 8000980:	080009ad 	.word	0x080009ad
 8000984:	080009bb 	.word	0x080009bb
 8000988:	f000 f917 	bl	8000bba <SSD1306_Clear>
 800098c:	494a      	ldr	r1, [pc, #296]	@ (8000ab8 <main+0x1c8>)
 800098e:	2003      	movs	r0, #3
 8000990:	f000 f988 	bl	8000ca4 <SSD1306_PrintTextCentered>
 8000994:	e026      	b.n	80009e4 <main+0xf4>
 8000996:	4b4a      	ldr	r3, [pc, #296]	@ (8000ac0 <main+0x1d0>)
 8000998:	781b      	ldrb	r3, [r3, #0]
 800099a:	b2db      	uxtb	r3, r3
 800099c:	4a49      	ldr	r2, [pc, #292]	@ (8000ac4 <main+0x1d4>)
 800099e:	7812      	ldrb	r2, [r2, #0]
 80009a0:	b2d2      	uxtb	r2, r2
 80009a2:	4611      	mov	r1, r2
 80009a4:	4618      	mov	r0, r3
 80009a6:	f000 f9a9 	bl	8000cfc <SSD1306_DisplayStatus>
 80009aa:	e01b      	b.n	80009e4 <main+0xf4>
 80009ac:	f000 f905 	bl	8000bba <SSD1306_Clear>
 80009b0:	4945      	ldr	r1, [pc, #276]	@ (8000ac8 <main+0x1d8>)
 80009b2:	2003      	movs	r0, #3
 80009b4:	f000 f976 	bl	8000ca4 <SSD1306_PrintTextCentered>
 80009b8:	e014      	b.n	80009e4 <main+0xf4>
 80009ba:	f000 f8fe 	bl	8000bba <SSD1306_Clear>
 80009be:	4943      	ldr	r1, [pc, #268]	@ (8000acc <main+0x1dc>)
 80009c0:	2002      	movs	r0, #2
 80009c2:	f000 f96f 	bl	8000ca4 <SSD1306_PrintTextCentered>
 80009c6:	4b3e      	ldr	r3, [pc, #248]	@ (8000ac0 <main+0x1d0>)
 80009c8:	781b      	ldrb	r3, [r3, #0]
 80009ca:	b2db      	uxtb	r3, r3
 80009cc:	461a      	mov	r2, r3
 80009ce:	463b      	mov	r3, r7
 80009d0:	493f      	ldr	r1, [pc, #252]	@ (8000ad0 <main+0x1e0>)
 80009d2:	4618      	mov	r0, r3
 80009d4:	f000 fb00 	bl	8000fd8 <siprintf>
 80009d8:	463b      	mov	r3, r7
 80009da:	4619      	mov	r1, r3
 80009dc:	2004      	movs	r0, #4
 80009de:	f000 f961 	bl	8000ca4 <SSD1306_PrintTextCentered>
 80009e2:	bf00      	nop
 80009e4:	693b      	ldr	r3, [r7, #16]
 80009e6:	617b      	str	r3, [r7, #20]
 80009e8:	4b3a      	ldr	r3, [pc, #232]	@ (8000ad4 <main+0x1e4>)
 80009ea:	781b      	ldrb	r3, [r3, #0]
 80009ec:	b2db      	uxtb	r3, r3
 80009ee:	2b00      	cmp	r3, #0
 80009f0:	d103      	bne.n	80009fa <main+0x10a>
 80009f2:	200a      	movs	r0, #10
 80009f4:	f000 fa90 	bl	8000f18 <Delay_ms>
 80009f8:	e05b      	b.n	8000ab2 <main+0x1c2>
 80009fa:	693a      	ldr	r2, [r7, #16]
 80009fc:	69fb      	ldr	r3, [r7, #28]
 80009fe:	1ad3      	subs	r3, r2, r3
 8000a00:	2b63      	cmp	r3, #99	@ 0x63
 8000a02:	d92d      	bls.n	8000a60 <main+0x170>
 8000a04:	4b34      	ldr	r3, [pc, #208]	@ (8000ad8 <main+0x1e8>)
 8000a06:	781b      	ldrb	r3, [r3, #0]
 8000a08:	b2db      	uxtb	r3, r3
 8000a0a:	2b00      	cmp	r3, #0
 8000a0c:	d106      	bne.n	8000a1c <main+0x12c>
 8000a0e:	f7ff fc87 	bl	8000320 <Mode_Update_From_ADC>
 8000a12:	4603      	mov	r3, r0
 8000a14:	461a      	mov	r2, r3
 8000a16:	4b2a      	ldr	r3, [pc, #168]	@ (8000ac0 <main+0x1d0>)
 8000a18:	701a      	strb	r2, [r3, #0]
 8000a1a:	e002      	b.n	8000a22 <main+0x132>
 8000a1c:	4b2e      	ldr	r3, [pc, #184]	@ (8000ad8 <main+0x1e8>)
 8000a1e:	2200      	movs	r2, #0
 8000a20:	701a      	strb	r2, [r3, #0]
 8000a22:	4b26      	ldr	r3, [pc, #152]	@ (8000abc <main+0x1cc>)
 8000a24:	781b      	ldrb	r3, [r3, #0]
 8000a26:	b2db      	uxtb	r3, r3
 8000a28:	2b01      	cmp	r3, #1
 8000a2a:	d004      	beq.n	8000a36 <main+0x146>
 8000a2c:	4b23      	ldr	r3, [pc, #140]	@ (8000abc <main+0x1cc>)
 8000a2e:	781b      	ldrb	r3, [r3, #0]
 8000a30:	b2db      	uxtb	r3, r3
 8000a32:	2b03      	cmp	r3, #3
 8000a34:	d10c      	bne.n	8000a50 <main+0x160>
 8000a36:	4b22      	ldr	r3, [pc, #136]	@ (8000ac0 <main+0x1d0>)
 8000a38:	781b      	ldrb	r3, [r3, #0]
 8000a3a:	b2db      	uxtb	r3, r3
 8000a3c:	4618      	mov	r0, r3
 8000a3e:	f000 f9ef 	bl	8000e20 <Update_PWM_From_Mode>
 8000a42:	4b1f      	ldr	r3, [pc, #124]	@ (8000ac0 <main+0x1d0>)
 8000a44:	781b      	ldrb	r3, [r3, #0]
 8000a46:	b2db      	uxtb	r3, r3
 8000a48:	4618      	mov	r0, r3
 8000a4a:	f7ff ff1d 	bl	8000888 <LED_Update>
 8000a4e:	e005      	b.n	8000a5c <main+0x16c>
 8000a50:	4b22      	ldr	r3, [pc, #136]	@ (8000adc <main+0x1ec>)
 8000a52:	2200      	movs	r2, #0
 8000a54:	639a      	str	r2, [r3, #56]	@ 0x38
 8000a56:	2000      	movs	r0, #0
 8000a58:	f7ff ff16 	bl	8000888 <LED_Update>
 8000a5c:	693b      	ldr	r3, [r7, #16]
 8000a5e:	61fb      	str	r3, [r7, #28]
 8000a60:	693a      	ldr	r2, [r7, #16]
 8000a62:	69bb      	ldr	r3, [r7, #24]
 8000a64:	1ad3      	subs	r3, r2, r3
 8000a66:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8000a6a:	d31f      	bcc.n	8000aac <main+0x1bc>
 8000a6c:	4b13      	ldr	r3, [pc, #76]	@ (8000abc <main+0x1cc>)
 8000a6e:	781b      	ldrb	r3, [r3, #0]
 8000a70:	b2db      	uxtb	r3, r3
 8000a72:	2b01      	cmp	r3, #1
 8000a74:	d118      	bne.n	8000aa8 <main+0x1b8>
 8000a76:	4b13      	ldr	r3, [pc, #76]	@ (8000ac4 <main+0x1d4>)
 8000a78:	781b      	ldrb	r3, [r3, #0]
 8000a7a:	b2db      	uxtb	r3, r3
 8000a7c:	2b00      	cmp	r3, #0
 8000a7e:	d013      	beq.n	8000aa8 <main+0x1b8>
 8000a80:	4b0f      	ldr	r3, [pc, #60]	@ (8000ac0 <main+0x1d0>)
 8000a82:	781b      	ldrb	r3, [r3, #0]
 8000a84:	b2db      	uxtb	r3, r3
 8000a86:	2b00      	cmp	r3, #0
 8000a88:	d00e      	beq.n	8000aa8 <main+0x1b8>
 8000a8a:	4b0e      	ldr	r3, [pc, #56]	@ (8000ac4 <main+0x1d4>)
 8000a8c:	781b      	ldrb	r3, [r3, #0]
 8000a8e:	b2db      	uxtb	r3, r3
 8000a90:	3b01      	subs	r3, #1
 8000a92:	b2da      	uxtb	r2, r3
 8000a94:	4b0b      	ldr	r3, [pc, #44]	@ (8000ac4 <main+0x1d4>)
 8000a96:	701a      	strb	r2, [r3, #0]
 8000a98:	4b0a      	ldr	r3, [pc, #40]	@ (8000ac4 <main+0x1d4>)
 8000a9a:	781b      	ldrb	r3, [r3, #0]
 8000a9c:	b2db      	uxtb	r3, r3
 8000a9e:	2b00      	cmp	r3, #0
 8000aa0:	d102      	bne.n	8000aa8 <main+0x1b8>
 8000aa2:	4b06      	ldr	r3, [pc, #24]	@ (8000abc <main+0x1cc>)
 8000aa4:	2200      	movs	r2, #0
 8000aa6:	701a      	strb	r2, [r3, #0]
 8000aa8:	693b      	ldr	r3, [r7, #16]
 8000aaa:	61bb      	str	r3, [r7, #24]
 8000aac:	200a      	movs	r0, #10
 8000aae:	f000 fa33 	bl	8000f18 <Delay_ms>
 8000ab2:	e74f      	b.n	8000954 <main+0x64>
 8000ab4:	40020000 	.word	0x40020000
 8000ab8:	08001930 	.word	0x08001930
 8000abc:	20000002 	.word	0x20000002
 8000ac0:	20000000 	.word	0x20000000
 8000ac4:	20000070 	.word	0x20000070
 8000ac8:	08001940 	.word	0x08001940
 8000acc:	08001950 	.word	0x08001950
 8000ad0:	0800195c 	.word	0x0800195c
 8000ad4:	20000001 	.word	0x20000001
 8000ad8:	20000071 	.word	0x20000071
 8000adc:	40000800 	.word	0x40000800

08000ae0 <SSD1306_Command>:
 8000ae0:	b580      	push	{r7, lr}
 8000ae2:	b082      	sub	sp, #8
 8000ae4:	af00      	add	r7, sp, #0
 8000ae6:	4603      	mov	r3, r0
 8000ae8:	71fb      	strb	r3, [r7, #7]
 8000aea:	79fb      	ldrb	r3, [r7, #7]
 8000aec:	461a      	mov	r2, r3
 8000aee:	2100      	movs	r1, #0
 8000af0:	203c      	movs	r0, #60	@ 0x3c
 8000af2:	f7ff fe0f 	bl	8000714 <I2C_WriteByte>
 8000af6:	4603      	mov	r3, r0
 8000af8:	4618      	mov	r0, r3
 8000afa:	3708      	adds	r7, #8
 8000afc:	46bd      	mov	sp, r7
 8000afe:	bd80      	pop	{r7, pc}

08000b00 <SSD1306_Data>:
 8000b00:	b580      	push	{r7, lr}
 8000b02:	b082      	sub	sp, #8
 8000b04:	af00      	add	r7, sp, #0
 8000b06:	4603      	mov	r3, r0
 8000b08:	71fb      	strb	r3, [r7, #7]
 8000b0a:	79fb      	ldrb	r3, [r7, #7]
 8000b0c:	461a      	mov	r2, r3
 8000b0e:	2140      	movs	r1, #64	@ 0x40
 8000b10:	203c      	movs	r0, #60	@ 0x3c
 8000b12:	f7ff fdff 	bl	8000714 <I2C_WriteByte>
 8000b16:	4603      	mov	r3, r0
 8000b18:	4618      	mov	r0, r3
 8000b1a:	3708      	adds	r7, #8
 8000b1c:	46bd      	mov	sp, r7
 8000b1e:	bd80      	pop	{r7, pc}

08000b20 <SSD1306_Init>:
 8000b20:	b5b0      	push	{r4, r5, r7, lr}
 8000b22:	b088      	sub	sp, #32
 8000b24:	af00      	add	r7, sp, #0
 8000b26:	2064      	movs	r0, #100	@ 0x64
 8000b28:	f000 f9f6 	bl	8000f18 <Delay_ms>
 8000b2c:	4b11      	ldr	r3, [pc, #68]	@ (8000b74 <SSD1306_Init+0x54>)
 8000b2e:	463c      	mov	r4, r7
 8000b30:	461d      	mov	r5, r3
 8000b32:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000b34:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000b36:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8000b3a:	c403      	stmia	r4!, {r0, r1}
 8000b3c:	7022      	strb	r2, [r4, #0]
 8000b3e:	2300      	movs	r3, #0
 8000b40:	61fb      	str	r3, [r7, #28]
 8000b42:	e00e      	b.n	8000b62 <SSD1306_Init+0x42>
 8000b44:	463a      	mov	r2, r7
 8000b46:	69fb      	ldr	r3, [r7, #28]
 8000b48:	4413      	add	r3, r2
 8000b4a:	781b      	ldrb	r3, [r3, #0]
 8000b4c:	4618      	mov	r0, r3
 8000b4e:	f7ff ffc7 	bl	8000ae0 <SSD1306_Command>
 8000b52:	4603      	mov	r3, r0
 8000b54:	2b00      	cmp	r3, #0
 8000b56:	d101      	bne.n	8000b5c <SSD1306_Init+0x3c>
 8000b58:	2300      	movs	r3, #0
 8000b5a:	e006      	b.n	8000b6a <SSD1306_Init+0x4a>
 8000b5c:	69fb      	ldr	r3, [r7, #28]
 8000b5e:	3301      	adds	r3, #1
 8000b60:	61fb      	str	r3, [r7, #28]
 8000b62:	69fb      	ldr	r3, [r7, #28]
 8000b64:	2b18      	cmp	r3, #24
 8000b66:	d9ed      	bls.n	8000b44 <SSD1306_Init+0x24>
 8000b68:	2301      	movs	r3, #1
 8000b6a:	4618      	mov	r0, r3
 8000b6c:	3720      	adds	r7, #32
 8000b6e:	46bd      	mov	sp, r7
 8000b70:	bdb0      	pop	{r4, r5, r7, pc}
 8000b72:	bf00      	nop
 8000b74:	08001968 	.word	0x08001968

08000b78 <SSD1306_SetCursor>:
 8000b78:	b580      	push	{r7, lr}
 8000b7a:	b082      	sub	sp, #8
 8000b7c:	af00      	add	r7, sp, #0
 8000b7e:	4603      	mov	r3, r0
 8000b80:	460a      	mov	r2, r1
 8000b82:	71fb      	strb	r3, [r7, #7]
 8000b84:	4613      	mov	r3, r2
 8000b86:	71bb      	strb	r3, [r7, #6]
 8000b88:	79bb      	ldrb	r3, [r7, #6]
 8000b8a:	3b50      	subs	r3, #80	@ 0x50
 8000b8c:	b2db      	uxtb	r3, r3
 8000b8e:	4618      	mov	r0, r3
 8000b90:	f7ff ffa6 	bl	8000ae0 <SSD1306_Command>
 8000b94:	79fb      	ldrb	r3, [r7, #7]
 8000b96:	f003 030f 	and.w	r3, r3, #15
 8000b9a:	b2db      	uxtb	r3, r3
 8000b9c:	4618      	mov	r0, r3
 8000b9e:	f7ff ff9f 	bl	8000ae0 <SSD1306_Command>
 8000ba2:	79fb      	ldrb	r3, [r7, #7]
 8000ba4:	091b      	lsrs	r3, r3, #4
 8000ba6:	b2db      	uxtb	r3, r3
 8000ba8:	3310      	adds	r3, #16
 8000baa:	b2db      	uxtb	r3, r3
 8000bac:	4618      	mov	r0, r3
 8000bae:	f7ff ff97 	bl	8000ae0 <SSD1306_Command>
 8000bb2:	bf00      	nop
 8000bb4:	3708      	adds	r7, #8
 8000bb6:	46bd      	mov	sp, r7
 8000bb8:	bd80      	pop	{r7, pc}

08000bba <SSD1306_Clear>:
 8000bba:	b580      	push	{r7, lr}
 8000bbc:	b082      	sub	sp, #8
 8000bbe:	af00      	add	r7, sp, #0
 8000bc0:	2300      	movs	r3, #0
 8000bc2:	71fb      	strb	r3, [r7, #7]
 8000bc4:	e014      	b.n	8000bf0 <SSD1306_Clear+0x36>
 8000bc6:	79fb      	ldrb	r3, [r7, #7]
 8000bc8:	4619      	mov	r1, r3
 8000bca:	2000      	movs	r0, #0
 8000bcc:	f7ff ffd4 	bl	8000b78 <SSD1306_SetCursor>
 8000bd0:	2300      	movs	r3, #0
 8000bd2:	71bb      	strb	r3, [r7, #6]
 8000bd4:	e005      	b.n	8000be2 <SSD1306_Clear+0x28>
 8000bd6:	2000      	movs	r0, #0
 8000bd8:	f7ff ff92 	bl	8000b00 <SSD1306_Data>
 8000bdc:	79bb      	ldrb	r3, [r7, #6]
 8000bde:	3301      	adds	r3, #1
 8000be0:	71bb      	strb	r3, [r7, #6]
 8000be2:	f997 3006 	ldrsb.w	r3, [r7, #6]
 8000be6:	2b00      	cmp	r3, #0
 8000be8:	daf5      	bge.n	8000bd6 <SSD1306_Clear+0x1c>
 8000bea:	79fb      	ldrb	r3, [r7, #7]
 8000bec:	3301      	adds	r3, #1
 8000bee:	71fb      	strb	r3, [r7, #7]
 8000bf0:	79fb      	ldrb	r3, [r7, #7]
 8000bf2:	2b07      	cmp	r3, #7
 8000bf4:	d9e7      	bls.n	8000bc6 <SSD1306_Clear+0xc>
 8000bf6:	bf00      	nop
 8000bf8:	bf00      	nop
 8000bfa:	3708      	adds	r7, #8
 8000bfc:	46bd      	mov	sp, r7
 8000bfe:	bd80      	pop	{r7, pc}

08000c00 <SSD1306_PrintChar>:
 8000c00:	b580      	push	{r7, lr}
 8000c02:	b084      	sub	sp, #16
 8000c04:	af00      	add	r7, sp, #0
 8000c06:	4603      	mov	r3, r0
 8000c08:	71fb      	strb	r3, [r7, #7]
 8000c0a:	79fb      	ldrb	r3, [r7, #7]
 8000c0c:	2b40      	cmp	r3, #64	@ 0x40
 8000c0e:	d90c      	bls.n	8000c2a <SSD1306_PrintChar+0x2a>
 8000c10:	79fb      	ldrb	r3, [r7, #7]
 8000c12:	2b5a      	cmp	r3, #90	@ 0x5a
 8000c14:	d809      	bhi.n	8000c2a <SSD1306_PrintChar+0x2a>
 8000c16:	79fb      	ldrb	r3, [r7, #7]
 8000c18:	f1a3 0241 	sub.w	r2, r3, #65	@ 0x41
 8000c1c:	4613      	mov	r3, r2
 8000c1e:	009b      	lsls	r3, r3, #2
 8000c20:	4413      	add	r3, r2
 8000c22:	4a1e      	ldr	r2, [pc, #120]	@ (8000c9c <SSD1306_PrintChar+0x9c>)
 8000c24:	4413      	add	r3, r2
 8000c26:	60fb      	str	r3, [r7, #12]
 8000c28:	e020      	b.n	8000c6c <SSD1306_PrintChar+0x6c>
 8000c2a:	79fb      	ldrb	r3, [r7, #7]
 8000c2c:	2b60      	cmp	r3, #96	@ 0x60
 8000c2e:	d90c      	bls.n	8000c4a <SSD1306_PrintChar+0x4a>
 8000c30:	79fb      	ldrb	r3, [r7, #7]
 8000c32:	2b7a      	cmp	r3, #122	@ 0x7a
 8000c34:	d809      	bhi.n	8000c4a <SSD1306_PrintChar+0x4a>
 8000c36:	79fb      	ldrb	r3, [r7, #7]
 8000c38:	f1a3 0247 	sub.w	r2, r3, #71	@ 0x47
 8000c3c:	4613      	mov	r3, r2
 8000c3e:	009b      	lsls	r3, r3, #2
 8000c40:	4413      	add	r3, r2
 8000c42:	4a16      	ldr	r2, [pc, #88]	@ (8000c9c <SSD1306_PrintChar+0x9c>)
 8000c44:	4413      	add	r3, r2
 8000c46:	60fb      	str	r3, [r7, #12]
 8000c48:	e010      	b.n	8000c6c <SSD1306_PrintChar+0x6c>
 8000c4a:	79fb      	ldrb	r3, [r7, #7]
 8000c4c:	2b2f      	cmp	r3, #47	@ 0x2f
 8000c4e:	d90b      	bls.n	8000c68 <SSD1306_PrintChar+0x68>
 8000c50:	79fb      	ldrb	r3, [r7, #7]
 8000c52:	2b39      	cmp	r3, #57	@ 0x39
 8000c54:	d808      	bhi.n	8000c68 <SSD1306_PrintChar+0x68>
 8000c56:	79fb      	ldrb	r3, [r7, #7]
 8000c58:	1d1a      	adds	r2, r3, #4
 8000c5a:	4613      	mov	r3, r2
 8000c5c:	009b      	lsls	r3, r3, #2
 8000c5e:	4413      	add	r3, r2
 8000c60:	4a0e      	ldr	r2, [pc, #56]	@ (8000c9c <SSD1306_PrintChar+0x9c>)
 8000c62:	4413      	add	r3, r2
 8000c64:	60fb      	str	r3, [r7, #12]
 8000c66:	e001      	b.n	8000c6c <SSD1306_PrintChar+0x6c>
 8000c68:	4b0d      	ldr	r3, [pc, #52]	@ (8000ca0 <SSD1306_PrintChar+0xa0>)
 8000c6a:	60fb      	str	r3, [r7, #12]
 8000c6c:	2300      	movs	r3, #0
 8000c6e:	60bb      	str	r3, [r7, #8]
 8000c70:	e009      	b.n	8000c86 <SSD1306_PrintChar+0x86>
 8000c72:	68bb      	ldr	r3, [r7, #8]
 8000c74:	68fa      	ldr	r2, [r7, #12]
 8000c76:	4413      	add	r3, r2
 8000c78:	781b      	ldrb	r3, [r3, #0]
 8000c7a:	4618      	mov	r0, r3
 8000c7c:	f7ff ff40 	bl	8000b00 <SSD1306_Data>
 8000c80:	68bb      	ldr	r3, [r7, #8]
 8000c82:	3301      	adds	r3, #1
 8000c84:	60bb      	str	r3, [r7, #8]
 8000c86:	68bb      	ldr	r3, [r7, #8]
 8000c88:	2b04      	cmp	r3, #4
 8000c8a:	ddf2      	ble.n	8000c72 <SSD1306_PrintChar+0x72>
 8000c8c:	2000      	movs	r0, #0
 8000c8e:	f7ff ff37 	bl	8000b00 <SSD1306_Data>
 8000c92:	bf00      	nop
 8000c94:	3710      	adds	r7, #16
 8000c96:	46bd      	mov	sp, r7
 8000c98:	bd80      	pop	{r7, pc}
 8000c9a:	bf00      	nop
 8000c9c:	080019b0 	.word	0x080019b0
 8000ca0:	08001ae6 	.word	0x08001ae6

08000ca4 <SSD1306_PrintTextCentered>:
 8000ca4:	b580      	push	{r7, lr}
 8000ca6:	b084      	sub	sp, #16
 8000ca8:	af00      	add	r7, sp, #0
 8000caa:	4603      	mov	r3, r0
 8000cac:	6039      	str	r1, [r7, #0]
 8000cae:	71fb      	strb	r3, [r7, #7]
 8000cb0:	6838      	ldr	r0, [r7, #0]
 8000cb2:	f7ff fa95 	bl	80001e0 <strlen>
 8000cb6:	4603      	mov	r3, r0
 8000cb8:	73fb      	strb	r3, [r7, #15]
 8000cba:	7bfa      	ldrb	r2, [r7, #15]
 8000cbc:	4613      	mov	r3, r2
 8000cbe:	0092      	lsls	r2, r2, #2
 8000cc0:	1a9b      	subs	r3, r3, r2
 8000cc2:	005b      	lsls	r3, r3, #1
 8000cc4:	3380      	adds	r3, #128	@ 0x80
 8000cc6:	0fda      	lsrs	r2, r3, #31
 8000cc8:	4413      	add	r3, r2
 8000cca:	105b      	asrs	r3, r3, #1
 8000ccc:	73bb      	strb	r3, [r7, #14]
 8000cce:	79fa      	ldrb	r2, [r7, #7]
 8000cd0:	7bbb      	ldrb	r3, [r7, #14]
 8000cd2:	4611      	mov	r1, r2
 8000cd4:	4618      	mov	r0, r3
 8000cd6:	f7ff ff4f 	bl	8000b78 <SSD1306_SetCursor>
 8000cda:	e006      	b.n	8000cea <SSD1306_PrintTextCentered+0x46>
 8000cdc:	683b      	ldr	r3, [r7, #0]
 8000cde:	1c5a      	adds	r2, r3, #1
 8000ce0:	603a      	str	r2, [r7, #0]
 8000ce2:	781b      	ldrb	r3, [r3, #0]
 8000ce4:	4618      	mov	r0, r3
 8000ce6:	f7ff ff8b 	bl	8000c00 <SSD1306_PrintChar>
 8000cea:	683b      	ldr	r3, [r7, #0]
 8000cec:	781b      	ldrb	r3, [r3, #0]
 8000cee:	2b00      	cmp	r3, #0
 8000cf0:	d1f4      	bne.n	8000cdc <SSD1306_PrintTextCentered+0x38>
 8000cf2:	bf00      	nop
 8000cf4:	bf00      	nop
 8000cf6:	3710      	adds	r7, #16
 8000cf8:	46bd      	mov	sp, r7
 8000cfa:	bd80      	pop	{r7, pc}

08000cfc <SSD1306_DisplayStatus>:
 8000cfc:	b580      	push	{r7, lr}
 8000cfe:	b08a      	sub	sp, #40	@ 0x28
 8000d00:	af00      	add	r7, sp, #0
 8000d02:	4603      	mov	r3, r0
 8000d04:	460a      	mov	r2, r1
 8000d06:	71fb      	strb	r3, [r7, #7]
 8000d08:	4613      	mov	r3, r2
 8000d0a:	71bb      	strb	r3, [r7, #6]
 8000d0c:	f7ff ff55 	bl	8000bba <SSD1306_Clear>
 8000d10:	4915      	ldr	r1, [pc, #84]	@ (8000d68 <SSD1306_DisplayStatus+0x6c>)
 8000d12:	2001      	movs	r0, #1
 8000d14:	f7ff ffc6 	bl	8000ca4 <SSD1306_PrintTextCentered>
 8000d18:	79fa      	ldrb	r2, [r7, #7]
 8000d1a:	f107 0308 	add.w	r3, r7, #8
 8000d1e:	4913      	ldr	r1, [pc, #76]	@ (8000d6c <SSD1306_DisplayStatus+0x70>)
 8000d20:	4618      	mov	r0, r3
 8000d22:	f000 f959 	bl	8000fd8 <siprintf>
 8000d26:	f107 0308 	add.w	r3, r7, #8
 8000d2a:	4619      	mov	r1, r3
 8000d2c:	2003      	movs	r0, #3
 8000d2e:	f7ff ffb9 	bl	8000ca4 <SSD1306_PrintTextCentered>
 8000d32:	79bb      	ldrb	r3, [r7, #6]
 8000d34:	2b00      	cmp	r3, #0
 8000d36:	d007      	beq.n	8000d48 <SSD1306_DisplayStatus+0x4c>
 8000d38:	79ba      	ldrb	r2, [r7, #6]
 8000d3a:	f107 0308 	add.w	r3, r7, #8
 8000d3e:	490c      	ldr	r1, [pc, #48]	@ (8000d70 <SSD1306_DisplayStatus+0x74>)
 8000d40:	4618      	mov	r0, r3
 8000d42:	f000 f949 	bl	8000fd8 <siprintf>
 8000d46:	e005      	b.n	8000d54 <SSD1306_DisplayStatus+0x58>
 8000d48:	f107 0308 	add.w	r3, r7, #8
 8000d4c:	4909      	ldr	r1, [pc, #36]	@ (8000d74 <SSD1306_DisplayStatus+0x78>)
 8000d4e:	4618      	mov	r0, r3
 8000d50:	f000 f942 	bl	8000fd8 <siprintf>
 8000d54:	f107 0308 	add.w	r3, r7, #8
 8000d58:	4619      	mov	r1, r3
 8000d5a:	2005      	movs	r0, #5
 8000d5c:	f7ff ffa2 	bl	8000ca4 <SSD1306_PrintTextCentered>
 8000d60:	bf00      	nop
 8000d62:	3728      	adds	r7, #40	@ 0x28
 8000d64:	46bd      	mov	sp, r7
 8000d66:	bd80      	pop	{r7, pc}
 8000d68:	08001984 	.word	0x08001984
 8000d6c:	08001994 	.word	0x08001994
 8000d70:	0800199c 	.word	0x0800199c
 8000d74:	080019a8 	.word	0x080019a8

08000d78 <PWM_Init>:
// ====== pwm.c ======
#include "stm32f4xx.h"
#include "pwm.h"

void PWM_Init(void) {
 8000d78:	b480      	push	{r7}
 8000d7a:	af00      	add	r7, sp, #0
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOBEN;
 8000d7c:	4b25      	ldr	r3, [pc, #148]	@ (8000e14 <PWM_Init+0x9c>)
 8000d7e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000d80:	4a24      	ldr	r2, [pc, #144]	@ (8000e14 <PWM_Init+0x9c>)
 8000d82:	f043 0302 	orr.w	r3, r3, #2
 8000d86:	6313      	str	r3, [r2, #48]	@ 0x30
    RCC->APB1ENR |= RCC_APB1ENR_TIM4EN;
 8000d88:	4b22      	ldr	r3, [pc, #136]	@ (8000e14 <PWM_Init+0x9c>)
 8000d8a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000d8c:	4a21      	ldr	r2, [pc, #132]	@ (8000e14 <PWM_Init+0x9c>)
 8000d8e:	f043 0304 	orr.w	r3, r3, #4
 8000d92:	6413      	str	r3, [r2, #64]	@ 0x40

    GPIOB->MODER &= ~(3 << (7 * 2));
 8000d94:	4b20      	ldr	r3, [pc, #128]	@ (8000e18 <PWM_Init+0xa0>)
 8000d96:	681b      	ldr	r3, [r3, #0]
 8000d98:	4a1f      	ldr	r2, [pc, #124]	@ (8000e18 <PWM_Init+0xa0>)
 8000d9a:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 8000d9e:	6013      	str	r3, [r2, #0]
    GPIOB->MODER |= (2 << (7 * 2));
 8000da0:	4b1d      	ldr	r3, [pc, #116]	@ (8000e18 <PWM_Init+0xa0>)
 8000da2:	681b      	ldr	r3, [r3, #0]
 8000da4:	4a1c      	ldr	r2, [pc, #112]	@ (8000e18 <PWM_Init+0xa0>)
 8000da6:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8000daa:	6013      	str	r3, [r2, #0]
    GPIOB->AFR[0] |= (2 << (7 * 4));
 8000dac:	4b1a      	ldr	r3, [pc, #104]	@ (8000e18 <PWM_Init+0xa0>)
 8000dae:	6a1b      	ldr	r3, [r3, #32]
 8000db0:	4a19      	ldr	r2, [pc, #100]	@ (8000e18 <PWM_Init+0xa0>)
 8000db2:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8000db6:	6213      	str	r3, [r2, #32]

    TIM4->PSC = 1599;
 8000db8:	4b18      	ldr	r3, [pc, #96]	@ (8000e1c <PWM_Init+0xa4>)
 8000dba:	f240 623f 	movw	r2, #1599	@ 0x63f
 8000dbe:	629a      	str	r2, [r3, #40]	@ 0x28
    TIM4->ARR = 100;
 8000dc0:	4b16      	ldr	r3, [pc, #88]	@ (8000e1c <PWM_Init+0xa4>)
 8000dc2:	2264      	movs	r2, #100	@ 0x64
 8000dc4:	62da      	str	r2, [r3, #44]	@ 0x2c
    TIM4->CCR2 = 0;
 8000dc6:	4b15      	ldr	r3, [pc, #84]	@ (8000e1c <PWM_Init+0xa4>)
 8000dc8:	2200      	movs	r2, #0
 8000dca:	639a      	str	r2, [r3, #56]	@ 0x38

    TIM4->CCMR1 &= ~TIM_CCMR1_OC2M;
 8000dcc:	4b13      	ldr	r3, [pc, #76]	@ (8000e1c <PWM_Init+0xa4>)
 8000dce:	699b      	ldr	r3, [r3, #24]
 8000dd0:	4a12      	ldr	r2, [pc, #72]	@ (8000e1c <PWM_Init+0xa4>)
 8000dd2:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8000dd6:	6193      	str	r3, [r2, #24]
    TIM4->CCMR1 |= (6 << TIM_CCMR1_OC2M_Pos);
 8000dd8:	4b10      	ldr	r3, [pc, #64]	@ (8000e1c <PWM_Init+0xa4>)
 8000dda:	699b      	ldr	r3, [r3, #24]
 8000ddc:	4a0f      	ldr	r2, [pc, #60]	@ (8000e1c <PWM_Init+0xa4>)
 8000dde:	f443 43c0 	orr.w	r3, r3, #24576	@ 0x6000
 8000de2:	6193      	str	r3, [r2, #24]
    TIM4->CCMR1 |= TIM_CCMR1_OC2PE;
 8000de4:	4b0d      	ldr	r3, [pc, #52]	@ (8000e1c <PWM_Init+0xa4>)
 8000de6:	699b      	ldr	r3, [r3, #24]
 8000de8:	4a0c      	ldr	r2, [pc, #48]	@ (8000e1c <PWM_Init+0xa4>)
 8000dea:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8000dee:	6193      	str	r3, [r2, #24]
    TIM4->CCER |= TIM_CCER_CC2E;
 8000df0:	4b0a      	ldr	r3, [pc, #40]	@ (8000e1c <PWM_Init+0xa4>)
 8000df2:	6a1b      	ldr	r3, [r3, #32]
 8000df4:	4a09      	ldr	r2, [pc, #36]	@ (8000e1c <PWM_Init+0xa4>)
 8000df6:	f043 0310 	orr.w	r3, r3, #16
 8000dfa:	6213      	str	r3, [r2, #32]
    TIM4->CR1 |= TIM_CR1_CEN;
 8000dfc:	4b07      	ldr	r3, [pc, #28]	@ (8000e1c <PWM_Init+0xa4>)
 8000dfe:	681b      	ldr	r3, [r3, #0]
 8000e00:	4a06      	ldr	r2, [pc, #24]	@ (8000e1c <PWM_Init+0xa4>)
 8000e02:	f043 0301 	orr.w	r3, r3, #1
 8000e06:	6013      	str	r3, [r2, #0]
}
 8000e08:	bf00      	nop
 8000e0a:	46bd      	mov	sp, r7
 8000e0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e10:	4770      	bx	lr
 8000e12:	bf00      	nop
 8000e14:	40023800 	.word	0x40023800
 8000e18:	40020400 	.word	0x40020400
 8000e1c:	40000800 	.word	0x40000800

08000e20 <Update_PWM_From_Mode>:

void Update_PWM_From_Mode(uint8_t mode) {
 8000e20:	b480      	push	{r7}
 8000e22:	b083      	sub	sp, #12
 8000e24:	af00      	add	r7, sp, #0
 8000e26:	4603      	mov	r3, r0
 8000e28:	71fb      	strb	r3, [r7, #7]
    switch (mode) {
 8000e2a:	79fb      	ldrb	r3, [r7, #7]
 8000e2c:	2b03      	cmp	r3, #3
 8000e2e:	d81b      	bhi.n	8000e68 <Update_PWM_From_Mode+0x48>
 8000e30:	a201      	add	r2, pc, #4	@ (adr r2, 8000e38 <Update_PWM_From_Mode+0x18>)
 8000e32:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000e36:	bf00      	nop
 8000e38:	08000e61 	.word	0x08000e61
 8000e3c:	08000e59 	.word	0x08000e59
 8000e40:	08000e51 	.word	0x08000e51
 8000e44:	08000e49 	.word	0x08000e49
        case 3: TIM4->CCR2 = 100; break;  // 100% tốc độ
 8000e48:	4b0c      	ldr	r3, [pc, #48]	@ (8000e7c <Update_PWM_From_Mode+0x5c>)
 8000e4a:	2264      	movs	r2, #100	@ 0x64
 8000e4c:	639a      	str	r2, [r3, #56]	@ 0x38
 8000e4e:	e00f      	b.n	8000e70 <Update_PWM_From_Mode+0x50>
        case 2: TIM4->CCR2 = 70;  break;
 8000e50:	4b0a      	ldr	r3, [pc, #40]	@ (8000e7c <Update_PWM_From_Mode+0x5c>)
 8000e52:	2246      	movs	r2, #70	@ 0x46
 8000e54:	639a      	str	r2, [r3, #56]	@ 0x38
 8000e56:	e00b      	b.n	8000e70 <Update_PWM_From_Mode+0x50>
        case 1: TIM4->CCR2 = 40;  break;
 8000e58:	4b08      	ldr	r3, [pc, #32]	@ (8000e7c <Update_PWM_From_Mode+0x5c>)
 8000e5a:	2228      	movs	r2, #40	@ 0x28
 8000e5c:	639a      	str	r2, [r3, #56]	@ 0x38
 8000e5e:	e007      	b.n	8000e70 <Update_PWM_From_Mode+0x50>
        case 0: TIM4->CCR2 = 0;   break;  // Dừng
 8000e60:	4b06      	ldr	r3, [pc, #24]	@ (8000e7c <Update_PWM_From_Mode+0x5c>)
 8000e62:	2200      	movs	r2, #0
 8000e64:	639a      	str	r2, [r3, #56]	@ 0x38
 8000e66:	e003      	b.n	8000e70 <Update_PWM_From_Mode+0x50>
        default: TIM4->CCR2 = 0;  break;
 8000e68:	4b04      	ldr	r3, [pc, #16]	@ (8000e7c <Update_PWM_From_Mode+0x5c>)
 8000e6a:	2200      	movs	r2, #0
 8000e6c:	639a      	str	r2, [r3, #56]	@ 0x38
 8000e6e:	bf00      	nop
    }
}
 8000e70:	bf00      	nop
 8000e72:	370c      	adds	r7, #12
 8000e74:	46bd      	mov	sp, r7
 8000e76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e7a:	4770      	bx	lr
 8000e7c:	40000800 	.word	0x40000800

08000e80 <NMI_Handler>:
 8000e80:	b480      	push	{r7}
 8000e82:	af00      	add	r7, sp, #0
 8000e84:	bf00      	nop
 8000e86:	e7fd      	b.n	8000e84 <NMI_Handler+0x4>

08000e88 <HardFault_Handler>:
 8000e88:	b480      	push	{r7}
 8000e8a:	af00      	add	r7, sp, #0
 8000e8c:	bf00      	nop
 8000e8e:	e7fd      	b.n	8000e8c <HardFault_Handler+0x4>

08000e90 <MemManage_Handler>:
 8000e90:	b480      	push	{r7}
 8000e92:	af00      	add	r7, sp, #0
 8000e94:	bf00      	nop
 8000e96:	e7fd      	b.n	8000e94 <MemManage_Handler+0x4>

08000e98 <BusFault_Handler>:
 8000e98:	b480      	push	{r7}
 8000e9a:	af00      	add	r7, sp, #0
 8000e9c:	bf00      	nop
 8000e9e:	e7fd      	b.n	8000e9c <BusFault_Handler+0x4>

08000ea0 <UsageFault_Handler>:
 8000ea0:	b480      	push	{r7}
 8000ea2:	af00      	add	r7, sp, #0
 8000ea4:	bf00      	nop
 8000ea6:	e7fd      	b.n	8000ea4 <UsageFault_Handler+0x4>

08000ea8 <SVC_Handler>:
 8000ea8:	b480      	push	{r7}
 8000eaa:	af00      	add	r7, sp, #0
 8000eac:	bf00      	nop
 8000eae:	46bd      	mov	sp, r7
 8000eb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000eb4:	4770      	bx	lr

08000eb6 <DebugMon_Handler>:
 8000eb6:	b480      	push	{r7}
 8000eb8:	af00      	add	r7, sp, #0
 8000eba:	bf00      	nop
 8000ebc:	46bd      	mov	sp, r7
 8000ebe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ec2:	4770      	bx	lr

08000ec4 <PendSV_Handler>:
 8000ec4:	b480      	push	{r7}
 8000ec6:	af00      	add	r7, sp, #0
 8000ec8:	bf00      	nop
 8000eca:	46bd      	mov	sp, r7
 8000ecc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ed0:	4770      	bx	lr
	...

08000ed4 <SysTick_Init>:
 8000ed4:	b480      	push	{r7}
 8000ed6:	af00      	add	r7, sp, #0
 8000ed8:	4b07      	ldr	r3, [pc, #28]	@ (8000ef8 <SysTick_Init+0x24>)
 8000eda:	f643 627f 	movw	r2, #15999	@ 0x3e7f
 8000ede:	605a      	str	r2, [r3, #4]
 8000ee0:	4b05      	ldr	r3, [pc, #20]	@ (8000ef8 <SysTick_Init+0x24>)
 8000ee2:	2200      	movs	r2, #0
 8000ee4:	609a      	str	r2, [r3, #8]
 8000ee6:	4b04      	ldr	r3, [pc, #16]	@ (8000ef8 <SysTick_Init+0x24>)
 8000ee8:	2207      	movs	r2, #7
 8000eea:	601a      	str	r2, [r3, #0]
 8000eec:	bf00      	nop
 8000eee:	46bd      	mov	sp, r7
 8000ef0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ef4:	4770      	bx	lr
 8000ef6:	bf00      	nop
 8000ef8:	e000e010 	.word	0xe000e010

08000efc <SysTick_Handler>:
 8000efc:	b480      	push	{r7}
 8000efe:	af00      	add	r7, sp, #0
 8000f00:	4b04      	ldr	r3, [pc, #16]	@ (8000f14 <SysTick_Handler+0x18>)
 8000f02:	681b      	ldr	r3, [r3, #0]
 8000f04:	3301      	adds	r3, #1
 8000f06:	4a03      	ldr	r2, [pc, #12]	@ (8000f14 <SysTick_Handler+0x18>)
 8000f08:	6013      	str	r3, [r2, #0]
 8000f0a:	bf00      	nop
 8000f0c:	46bd      	mov	sp, r7
 8000f0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f12:	4770      	bx	lr
 8000f14:	20000080 	.word	0x20000080

08000f18 <Delay_ms>:
 8000f18:	b480      	push	{r7}
 8000f1a:	b085      	sub	sp, #20
 8000f1c:	af00      	add	r7, sp, #0
 8000f1e:	6078      	str	r0, [r7, #4]
 8000f20:	4b08      	ldr	r3, [pc, #32]	@ (8000f44 <Delay_ms+0x2c>)
 8000f22:	681b      	ldr	r3, [r3, #0]
 8000f24:	60fb      	str	r3, [r7, #12]
 8000f26:	bf00      	nop
 8000f28:	4b06      	ldr	r3, [pc, #24]	@ (8000f44 <Delay_ms+0x2c>)
 8000f2a:	681a      	ldr	r2, [r3, #0]
 8000f2c:	68fb      	ldr	r3, [r7, #12]
 8000f2e:	1ad3      	subs	r3, r2, r3
 8000f30:	687a      	ldr	r2, [r7, #4]
 8000f32:	429a      	cmp	r2, r3
 8000f34:	d8f8      	bhi.n	8000f28 <Delay_ms+0x10>
 8000f36:	bf00      	nop
 8000f38:	bf00      	nop
 8000f3a:	3714      	adds	r7, #20
 8000f3c:	46bd      	mov	sp, r7
 8000f3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f42:	4770      	bx	lr
 8000f44:	20000080 	.word	0x20000080

08000f48 <GetTick>:
 8000f48:	b480      	push	{r7}
 8000f4a:	af00      	add	r7, sp, #0
 8000f4c:	4b03      	ldr	r3, [pc, #12]	@ (8000f5c <GetTick+0x14>)
 8000f4e:	681b      	ldr	r3, [r3, #0]
 8000f50:	4618      	mov	r0, r3
 8000f52:	46bd      	mov	sp, r7
 8000f54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f58:	4770      	bx	lr
 8000f5a:	bf00      	nop
 8000f5c:	20000080 	.word	0x20000080

08000f60 <SystemInit>:
 8000f60:	b480      	push	{r7}
 8000f62:	af00      	add	r7, sp, #0
 8000f64:	4b06      	ldr	r3, [pc, #24]	@ (8000f80 <SystemInit+0x20>)
 8000f66:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000f6a:	4a05      	ldr	r2, [pc, #20]	@ (8000f80 <SystemInit+0x20>)
 8000f6c:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8000f70:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8000f74:	bf00      	nop
 8000f76:	46bd      	mov	sp, r7
 8000f78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f7c:	4770      	bx	lr
 8000f7e:	bf00      	nop
 8000f80:	e000ed00 	.word	0xe000ed00

08000f84 <Reset_Handler>:
 8000f84:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8000fbc <LoopFillZerobss+0xe>
 8000f88:	f7ff ffea 	bl	8000f60 <SystemInit>
 8000f8c:	480c      	ldr	r0, [pc, #48]	@ (8000fc0 <LoopFillZerobss+0x12>)
 8000f8e:	490d      	ldr	r1, [pc, #52]	@ (8000fc4 <LoopFillZerobss+0x16>)
 8000f90:	4a0d      	ldr	r2, [pc, #52]	@ (8000fc8 <LoopFillZerobss+0x1a>)
 8000f92:	2300      	movs	r3, #0
 8000f94:	e002      	b.n	8000f9c <LoopCopyDataInit>

08000f96 <CopyDataInit>:
 8000f96:	58d4      	ldr	r4, [r2, r3]
 8000f98:	50c4      	str	r4, [r0, r3]
 8000f9a:	3304      	adds	r3, #4

08000f9c <LoopCopyDataInit>:
 8000f9c:	18c4      	adds	r4, r0, r3
 8000f9e:	428c      	cmp	r4, r1
 8000fa0:	d3f9      	bcc.n	8000f96 <CopyDataInit>
 8000fa2:	4a0a      	ldr	r2, [pc, #40]	@ (8000fcc <LoopFillZerobss+0x1e>)
 8000fa4:	4c0a      	ldr	r4, [pc, #40]	@ (8000fd0 <LoopFillZerobss+0x22>)
 8000fa6:	2300      	movs	r3, #0
 8000fa8:	e001      	b.n	8000fae <LoopFillZerobss>

08000faa <FillZerobss>:
 8000faa:	6013      	str	r3, [r2, #0]
 8000fac:	3204      	adds	r2, #4

08000fae <LoopFillZerobss>:
 8000fae:	42a2      	cmp	r2, r4
 8000fb0:	d3fb      	bcc.n	8000faa <FillZerobss>
 8000fb2:	f000 f831 	bl	8001018 <__libc_init_array>
 8000fb6:	f7ff fc9b 	bl	80008f0 <main>
 8000fba:	4770      	bx	lr
 8000fbc:	20018000 	.word	0x20018000
 8000fc0:	20000000 	.word	0x20000000
 8000fc4:	20000054 	.word	0x20000054
 8000fc8:	08001b30 	.word	0x08001b30
 8000fcc:	20000054 	.word	0x20000054
 8000fd0:	200001d0 	.word	0x200001d0

08000fd4 <ADC_IRQHandler>:
 8000fd4:	e7fe      	b.n	8000fd4 <ADC_IRQHandler>
	...

08000fd8 <siprintf>:
 8000fd8:	b40e      	push	{r1, r2, r3}
 8000fda:	b500      	push	{lr}
 8000fdc:	b09c      	sub	sp, #112	@ 0x70
 8000fde:	ab1d      	add	r3, sp, #116	@ 0x74
 8000fe0:	9002      	str	r0, [sp, #8]
 8000fe2:	9006      	str	r0, [sp, #24]
 8000fe4:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8000fe8:	4809      	ldr	r0, [pc, #36]	@ (8001010 <siprintf+0x38>)
 8000fea:	9107      	str	r1, [sp, #28]
 8000fec:	9104      	str	r1, [sp, #16]
 8000fee:	4909      	ldr	r1, [pc, #36]	@ (8001014 <siprintf+0x3c>)
 8000ff0:	f853 2b04 	ldr.w	r2, [r3], #4
 8000ff4:	9105      	str	r1, [sp, #20]
 8000ff6:	6800      	ldr	r0, [r0, #0]
 8000ff8:	9301      	str	r3, [sp, #4]
 8000ffa:	a902      	add	r1, sp, #8
 8000ffc:	f000 f986 	bl	800130c <_svfiprintf_r>
 8001000:	9b02      	ldr	r3, [sp, #8]
 8001002:	2200      	movs	r2, #0
 8001004:	701a      	strb	r2, [r3, #0]
 8001006:	b01c      	add	sp, #112	@ 0x70
 8001008:	f85d eb04 	ldr.w	lr, [sp], #4
 800100c:	b003      	add	sp, #12
 800100e:	4770      	bx	lr
 8001010:	20000004 	.word	0x20000004
 8001014:	ffff0208 	.word	0xffff0208

08001018 <__libc_init_array>:
 8001018:	b570      	push	{r4, r5, r6, lr}
 800101a:	4d0d      	ldr	r5, [pc, #52]	@ (8001050 <__libc_init_array+0x38>)
 800101c:	4c0d      	ldr	r4, [pc, #52]	@ (8001054 <__libc_init_array+0x3c>)
 800101e:	1b64      	subs	r4, r4, r5
 8001020:	10a4      	asrs	r4, r4, #2
 8001022:	2600      	movs	r6, #0
 8001024:	42a6      	cmp	r6, r4
 8001026:	d109      	bne.n	800103c <__libc_init_array+0x24>
 8001028:	4d0b      	ldr	r5, [pc, #44]	@ (8001058 <__libc_init_array+0x40>)
 800102a:	4c0c      	ldr	r4, [pc, #48]	@ (800105c <__libc_init_array+0x44>)
 800102c:	f000 fc74 	bl	8001918 <_init>
 8001030:	1b64      	subs	r4, r4, r5
 8001032:	10a4      	asrs	r4, r4, #2
 8001034:	2600      	movs	r6, #0
 8001036:	42a6      	cmp	r6, r4
 8001038:	d105      	bne.n	8001046 <__libc_init_array+0x2e>
 800103a:	bd70      	pop	{r4, r5, r6, pc}
 800103c:	f855 3b04 	ldr.w	r3, [r5], #4
 8001040:	4798      	blx	r3
 8001042:	3601      	adds	r6, #1
 8001044:	e7ee      	b.n	8001024 <__libc_init_array+0xc>
 8001046:	f855 3b04 	ldr.w	r3, [r5], #4
 800104a:	4798      	blx	r3
 800104c:	3601      	adds	r6, #1
 800104e:	e7f2      	b.n	8001036 <__libc_init_array+0x1e>
 8001050:	08001b28 	.word	0x08001b28
 8001054:	08001b28 	.word	0x08001b28
 8001058:	08001b28 	.word	0x08001b28
 800105c:	08001b2c 	.word	0x08001b2c

08001060 <__retarget_lock_acquire_recursive>:
 8001060:	4770      	bx	lr

08001062 <__retarget_lock_release_recursive>:
 8001062:	4770      	bx	lr

08001064 <_free_r>:
 8001064:	b538      	push	{r3, r4, r5, lr}
 8001066:	4605      	mov	r5, r0
 8001068:	2900      	cmp	r1, #0
 800106a:	d041      	beq.n	80010f0 <_free_r+0x8c>
 800106c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8001070:	1f0c      	subs	r4, r1, #4
 8001072:	2b00      	cmp	r3, #0
 8001074:	bfb8      	it	lt
 8001076:	18e4      	addlt	r4, r4, r3
 8001078:	f000 f8e0 	bl	800123c <__malloc_lock>
 800107c:	4a1d      	ldr	r2, [pc, #116]	@ (80010f4 <_free_r+0x90>)
 800107e:	6813      	ldr	r3, [r2, #0]
 8001080:	b933      	cbnz	r3, 8001090 <_free_r+0x2c>
 8001082:	6063      	str	r3, [r4, #4]
 8001084:	6014      	str	r4, [r2, #0]
 8001086:	4628      	mov	r0, r5
 8001088:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800108c:	f000 b8dc 	b.w	8001248 <__malloc_unlock>
 8001090:	42a3      	cmp	r3, r4
 8001092:	d908      	bls.n	80010a6 <_free_r+0x42>
 8001094:	6820      	ldr	r0, [r4, #0]
 8001096:	1821      	adds	r1, r4, r0
 8001098:	428b      	cmp	r3, r1
 800109a:	bf01      	itttt	eq
 800109c:	6819      	ldreq	r1, [r3, #0]
 800109e:	685b      	ldreq	r3, [r3, #4]
 80010a0:	1809      	addeq	r1, r1, r0
 80010a2:	6021      	streq	r1, [r4, #0]
 80010a4:	e7ed      	b.n	8001082 <_free_r+0x1e>
 80010a6:	461a      	mov	r2, r3
 80010a8:	685b      	ldr	r3, [r3, #4]
 80010aa:	b10b      	cbz	r3, 80010b0 <_free_r+0x4c>
 80010ac:	42a3      	cmp	r3, r4
 80010ae:	d9fa      	bls.n	80010a6 <_free_r+0x42>
 80010b0:	6811      	ldr	r1, [r2, #0]
 80010b2:	1850      	adds	r0, r2, r1
 80010b4:	42a0      	cmp	r0, r4
 80010b6:	d10b      	bne.n	80010d0 <_free_r+0x6c>
 80010b8:	6820      	ldr	r0, [r4, #0]
 80010ba:	4401      	add	r1, r0
 80010bc:	1850      	adds	r0, r2, r1
 80010be:	4283      	cmp	r3, r0
 80010c0:	6011      	str	r1, [r2, #0]
 80010c2:	d1e0      	bne.n	8001086 <_free_r+0x22>
 80010c4:	6818      	ldr	r0, [r3, #0]
 80010c6:	685b      	ldr	r3, [r3, #4]
 80010c8:	6053      	str	r3, [r2, #4]
 80010ca:	4408      	add	r0, r1
 80010cc:	6010      	str	r0, [r2, #0]
 80010ce:	e7da      	b.n	8001086 <_free_r+0x22>
 80010d0:	d902      	bls.n	80010d8 <_free_r+0x74>
 80010d2:	230c      	movs	r3, #12
 80010d4:	602b      	str	r3, [r5, #0]
 80010d6:	e7d6      	b.n	8001086 <_free_r+0x22>
 80010d8:	6820      	ldr	r0, [r4, #0]
 80010da:	1821      	adds	r1, r4, r0
 80010dc:	428b      	cmp	r3, r1
 80010de:	bf04      	itt	eq
 80010e0:	6819      	ldreq	r1, [r3, #0]
 80010e2:	685b      	ldreq	r3, [r3, #4]
 80010e4:	6063      	str	r3, [r4, #4]
 80010e6:	bf04      	itt	eq
 80010e8:	1809      	addeq	r1, r1, r0
 80010ea:	6021      	streq	r1, [r4, #0]
 80010ec:	6054      	str	r4, [r2, #4]
 80010ee:	e7ca      	b.n	8001086 <_free_r+0x22>
 80010f0:	bd38      	pop	{r3, r4, r5, pc}
 80010f2:	bf00      	nop
 80010f4:	200001c8 	.word	0x200001c8

080010f8 <sbrk_aligned>:
 80010f8:	b570      	push	{r4, r5, r6, lr}
 80010fa:	4e0f      	ldr	r6, [pc, #60]	@ (8001138 <sbrk_aligned+0x40>)
 80010fc:	460c      	mov	r4, r1
 80010fe:	6831      	ldr	r1, [r6, #0]
 8001100:	4605      	mov	r5, r0
 8001102:	b911      	cbnz	r1, 800110a <sbrk_aligned+0x12>
 8001104:	f000 fba6 	bl	8001854 <_sbrk_r>
 8001108:	6030      	str	r0, [r6, #0]
 800110a:	4621      	mov	r1, r4
 800110c:	4628      	mov	r0, r5
 800110e:	f000 fba1 	bl	8001854 <_sbrk_r>
 8001112:	1c43      	adds	r3, r0, #1
 8001114:	d103      	bne.n	800111e <sbrk_aligned+0x26>
 8001116:	f04f 34ff 	mov.w	r4, #4294967295
 800111a:	4620      	mov	r0, r4
 800111c:	bd70      	pop	{r4, r5, r6, pc}
 800111e:	1cc4      	adds	r4, r0, #3
 8001120:	f024 0403 	bic.w	r4, r4, #3
 8001124:	42a0      	cmp	r0, r4
 8001126:	d0f8      	beq.n	800111a <sbrk_aligned+0x22>
 8001128:	1a21      	subs	r1, r4, r0
 800112a:	4628      	mov	r0, r5
 800112c:	f000 fb92 	bl	8001854 <_sbrk_r>
 8001130:	3001      	adds	r0, #1
 8001132:	d1f2      	bne.n	800111a <sbrk_aligned+0x22>
 8001134:	e7ef      	b.n	8001116 <sbrk_aligned+0x1e>
 8001136:	bf00      	nop
 8001138:	200001c4 	.word	0x200001c4

0800113c <_malloc_r>:
 800113c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001140:	1ccd      	adds	r5, r1, #3
 8001142:	f025 0503 	bic.w	r5, r5, #3
 8001146:	3508      	adds	r5, #8
 8001148:	2d0c      	cmp	r5, #12
 800114a:	bf38      	it	cc
 800114c:	250c      	movcc	r5, #12
 800114e:	2d00      	cmp	r5, #0
 8001150:	4606      	mov	r6, r0
 8001152:	db01      	blt.n	8001158 <_malloc_r+0x1c>
 8001154:	42a9      	cmp	r1, r5
 8001156:	d904      	bls.n	8001162 <_malloc_r+0x26>
 8001158:	230c      	movs	r3, #12
 800115a:	6033      	str	r3, [r6, #0]
 800115c:	2000      	movs	r0, #0
 800115e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001162:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8001238 <_malloc_r+0xfc>
 8001166:	f000 f869 	bl	800123c <__malloc_lock>
 800116a:	f8d8 3000 	ldr.w	r3, [r8]
 800116e:	461c      	mov	r4, r3
 8001170:	bb44      	cbnz	r4, 80011c4 <_malloc_r+0x88>
 8001172:	4629      	mov	r1, r5
 8001174:	4630      	mov	r0, r6
 8001176:	f7ff ffbf 	bl	80010f8 <sbrk_aligned>
 800117a:	1c43      	adds	r3, r0, #1
 800117c:	4604      	mov	r4, r0
 800117e:	d158      	bne.n	8001232 <_malloc_r+0xf6>
 8001180:	f8d8 4000 	ldr.w	r4, [r8]
 8001184:	4627      	mov	r7, r4
 8001186:	2f00      	cmp	r7, #0
 8001188:	d143      	bne.n	8001212 <_malloc_r+0xd6>
 800118a:	2c00      	cmp	r4, #0
 800118c:	d04b      	beq.n	8001226 <_malloc_r+0xea>
 800118e:	6823      	ldr	r3, [r4, #0]
 8001190:	4639      	mov	r1, r7
 8001192:	4630      	mov	r0, r6
 8001194:	eb04 0903 	add.w	r9, r4, r3
 8001198:	f000 fb5c 	bl	8001854 <_sbrk_r>
 800119c:	4581      	cmp	r9, r0
 800119e:	d142      	bne.n	8001226 <_malloc_r+0xea>
 80011a0:	6821      	ldr	r1, [r4, #0]
 80011a2:	1a6d      	subs	r5, r5, r1
 80011a4:	4629      	mov	r1, r5
 80011a6:	4630      	mov	r0, r6
 80011a8:	f7ff ffa6 	bl	80010f8 <sbrk_aligned>
 80011ac:	3001      	adds	r0, #1
 80011ae:	d03a      	beq.n	8001226 <_malloc_r+0xea>
 80011b0:	6823      	ldr	r3, [r4, #0]
 80011b2:	442b      	add	r3, r5
 80011b4:	6023      	str	r3, [r4, #0]
 80011b6:	f8d8 3000 	ldr.w	r3, [r8]
 80011ba:	685a      	ldr	r2, [r3, #4]
 80011bc:	bb62      	cbnz	r2, 8001218 <_malloc_r+0xdc>
 80011be:	f8c8 7000 	str.w	r7, [r8]
 80011c2:	e00f      	b.n	80011e4 <_malloc_r+0xa8>
 80011c4:	6822      	ldr	r2, [r4, #0]
 80011c6:	1b52      	subs	r2, r2, r5
 80011c8:	d420      	bmi.n	800120c <_malloc_r+0xd0>
 80011ca:	2a0b      	cmp	r2, #11
 80011cc:	d917      	bls.n	80011fe <_malloc_r+0xc2>
 80011ce:	1961      	adds	r1, r4, r5
 80011d0:	42a3      	cmp	r3, r4
 80011d2:	6025      	str	r5, [r4, #0]
 80011d4:	bf18      	it	ne
 80011d6:	6059      	strne	r1, [r3, #4]
 80011d8:	6863      	ldr	r3, [r4, #4]
 80011da:	bf08      	it	eq
 80011dc:	f8c8 1000 	streq.w	r1, [r8]
 80011e0:	5162      	str	r2, [r4, r5]
 80011e2:	604b      	str	r3, [r1, #4]
 80011e4:	4630      	mov	r0, r6
 80011e6:	f000 f82f 	bl	8001248 <__malloc_unlock>
 80011ea:	f104 000b 	add.w	r0, r4, #11
 80011ee:	1d23      	adds	r3, r4, #4
 80011f0:	f020 0007 	bic.w	r0, r0, #7
 80011f4:	1ac2      	subs	r2, r0, r3
 80011f6:	bf1c      	itt	ne
 80011f8:	1a1b      	subne	r3, r3, r0
 80011fa:	50a3      	strne	r3, [r4, r2]
 80011fc:	e7af      	b.n	800115e <_malloc_r+0x22>
 80011fe:	6862      	ldr	r2, [r4, #4]
 8001200:	42a3      	cmp	r3, r4
 8001202:	bf0c      	ite	eq
 8001204:	f8c8 2000 	streq.w	r2, [r8]
 8001208:	605a      	strne	r2, [r3, #4]
 800120a:	e7eb      	b.n	80011e4 <_malloc_r+0xa8>
 800120c:	4623      	mov	r3, r4
 800120e:	6864      	ldr	r4, [r4, #4]
 8001210:	e7ae      	b.n	8001170 <_malloc_r+0x34>
 8001212:	463c      	mov	r4, r7
 8001214:	687f      	ldr	r7, [r7, #4]
 8001216:	e7b6      	b.n	8001186 <_malloc_r+0x4a>
 8001218:	461a      	mov	r2, r3
 800121a:	685b      	ldr	r3, [r3, #4]
 800121c:	42a3      	cmp	r3, r4
 800121e:	d1fb      	bne.n	8001218 <_malloc_r+0xdc>
 8001220:	2300      	movs	r3, #0
 8001222:	6053      	str	r3, [r2, #4]
 8001224:	e7de      	b.n	80011e4 <_malloc_r+0xa8>
 8001226:	230c      	movs	r3, #12
 8001228:	6033      	str	r3, [r6, #0]
 800122a:	4630      	mov	r0, r6
 800122c:	f000 f80c 	bl	8001248 <__malloc_unlock>
 8001230:	e794      	b.n	800115c <_malloc_r+0x20>
 8001232:	6005      	str	r5, [r0, #0]
 8001234:	e7d6      	b.n	80011e4 <_malloc_r+0xa8>
 8001236:	bf00      	nop
 8001238:	200001c8 	.word	0x200001c8

0800123c <__malloc_lock>:
 800123c:	4801      	ldr	r0, [pc, #4]	@ (8001244 <__malloc_lock+0x8>)
 800123e:	f7ff bf0f 	b.w	8001060 <__retarget_lock_acquire_recursive>
 8001242:	bf00      	nop
 8001244:	200001c0 	.word	0x200001c0

08001248 <__malloc_unlock>:
 8001248:	4801      	ldr	r0, [pc, #4]	@ (8001250 <__malloc_unlock+0x8>)
 800124a:	f7ff bf0a 	b.w	8001062 <__retarget_lock_release_recursive>
 800124e:	bf00      	nop
 8001250:	200001c0 	.word	0x200001c0

08001254 <__ssputs_r>:
 8001254:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001258:	688e      	ldr	r6, [r1, #8]
 800125a:	461f      	mov	r7, r3
 800125c:	42be      	cmp	r6, r7
 800125e:	680b      	ldr	r3, [r1, #0]
 8001260:	4682      	mov	sl, r0
 8001262:	460c      	mov	r4, r1
 8001264:	4690      	mov	r8, r2
 8001266:	d82d      	bhi.n	80012c4 <__ssputs_r+0x70>
 8001268:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800126c:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8001270:	d026      	beq.n	80012c0 <__ssputs_r+0x6c>
 8001272:	6965      	ldr	r5, [r4, #20]
 8001274:	6909      	ldr	r1, [r1, #16]
 8001276:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800127a:	eba3 0901 	sub.w	r9, r3, r1
 800127e:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8001282:	1c7b      	adds	r3, r7, #1
 8001284:	444b      	add	r3, r9
 8001286:	106d      	asrs	r5, r5, #1
 8001288:	429d      	cmp	r5, r3
 800128a:	bf38      	it	cc
 800128c:	461d      	movcc	r5, r3
 800128e:	0553      	lsls	r3, r2, #21
 8001290:	d527      	bpl.n	80012e2 <__ssputs_r+0x8e>
 8001292:	4629      	mov	r1, r5
 8001294:	f7ff ff52 	bl	800113c <_malloc_r>
 8001298:	4606      	mov	r6, r0
 800129a:	b360      	cbz	r0, 80012f6 <__ssputs_r+0xa2>
 800129c:	6921      	ldr	r1, [r4, #16]
 800129e:	464a      	mov	r2, r9
 80012a0:	f000 fae8 	bl	8001874 <memcpy>
 80012a4:	89a3      	ldrh	r3, [r4, #12]
 80012a6:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 80012aa:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80012ae:	81a3      	strh	r3, [r4, #12]
 80012b0:	6126      	str	r6, [r4, #16]
 80012b2:	6165      	str	r5, [r4, #20]
 80012b4:	444e      	add	r6, r9
 80012b6:	eba5 0509 	sub.w	r5, r5, r9
 80012ba:	6026      	str	r6, [r4, #0]
 80012bc:	60a5      	str	r5, [r4, #8]
 80012be:	463e      	mov	r6, r7
 80012c0:	42be      	cmp	r6, r7
 80012c2:	d900      	bls.n	80012c6 <__ssputs_r+0x72>
 80012c4:	463e      	mov	r6, r7
 80012c6:	6820      	ldr	r0, [r4, #0]
 80012c8:	4632      	mov	r2, r6
 80012ca:	4641      	mov	r1, r8
 80012cc:	f000 faa8 	bl	8001820 <memmove>
 80012d0:	68a3      	ldr	r3, [r4, #8]
 80012d2:	1b9b      	subs	r3, r3, r6
 80012d4:	60a3      	str	r3, [r4, #8]
 80012d6:	6823      	ldr	r3, [r4, #0]
 80012d8:	4433      	add	r3, r6
 80012da:	6023      	str	r3, [r4, #0]
 80012dc:	2000      	movs	r0, #0
 80012de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80012e2:	462a      	mov	r2, r5
 80012e4:	f000 fad4 	bl	8001890 <_realloc_r>
 80012e8:	4606      	mov	r6, r0
 80012ea:	2800      	cmp	r0, #0
 80012ec:	d1e0      	bne.n	80012b0 <__ssputs_r+0x5c>
 80012ee:	6921      	ldr	r1, [r4, #16]
 80012f0:	4650      	mov	r0, sl
 80012f2:	f7ff feb7 	bl	8001064 <_free_r>
 80012f6:	230c      	movs	r3, #12
 80012f8:	f8ca 3000 	str.w	r3, [sl]
 80012fc:	89a3      	ldrh	r3, [r4, #12]
 80012fe:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001302:	81a3      	strh	r3, [r4, #12]
 8001304:	f04f 30ff 	mov.w	r0, #4294967295
 8001308:	e7e9      	b.n	80012de <__ssputs_r+0x8a>
	...

0800130c <_svfiprintf_r>:
 800130c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001310:	4698      	mov	r8, r3
 8001312:	898b      	ldrh	r3, [r1, #12]
 8001314:	061b      	lsls	r3, r3, #24
 8001316:	b09d      	sub	sp, #116	@ 0x74
 8001318:	4607      	mov	r7, r0
 800131a:	460d      	mov	r5, r1
 800131c:	4614      	mov	r4, r2
 800131e:	d510      	bpl.n	8001342 <_svfiprintf_r+0x36>
 8001320:	690b      	ldr	r3, [r1, #16]
 8001322:	b973      	cbnz	r3, 8001342 <_svfiprintf_r+0x36>
 8001324:	2140      	movs	r1, #64	@ 0x40
 8001326:	f7ff ff09 	bl	800113c <_malloc_r>
 800132a:	6028      	str	r0, [r5, #0]
 800132c:	6128      	str	r0, [r5, #16]
 800132e:	b930      	cbnz	r0, 800133e <_svfiprintf_r+0x32>
 8001330:	230c      	movs	r3, #12
 8001332:	603b      	str	r3, [r7, #0]
 8001334:	f04f 30ff 	mov.w	r0, #4294967295
 8001338:	b01d      	add	sp, #116	@ 0x74
 800133a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800133e:	2340      	movs	r3, #64	@ 0x40
 8001340:	616b      	str	r3, [r5, #20]
 8001342:	2300      	movs	r3, #0
 8001344:	9309      	str	r3, [sp, #36]	@ 0x24
 8001346:	2320      	movs	r3, #32
 8001348:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800134c:	f8cd 800c 	str.w	r8, [sp, #12]
 8001350:	2330      	movs	r3, #48	@ 0x30
 8001352:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 80014f0 <_svfiprintf_r+0x1e4>
 8001356:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800135a:	f04f 0901 	mov.w	r9, #1
 800135e:	4623      	mov	r3, r4
 8001360:	469a      	mov	sl, r3
 8001362:	f813 2b01 	ldrb.w	r2, [r3], #1
 8001366:	b10a      	cbz	r2, 800136c <_svfiprintf_r+0x60>
 8001368:	2a25      	cmp	r2, #37	@ 0x25
 800136a:	d1f9      	bne.n	8001360 <_svfiprintf_r+0x54>
 800136c:	ebba 0b04 	subs.w	fp, sl, r4
 8001370:	d00b      	beq.n	800138a <_svfiprintf_r+0x7e>
 8001372:	465b      	mov	r3, fp
 8001374:	4622      	mov	r2, r4
 8001376:	4629      	mov	r1, r5
 8001378:	4638      	mov	r0, r7
 800137a:	f7ff ff6b 	bl	8001254 <__ssputs_r>
 800137e:	3001      	adds	r0, #1
 8001380:	f000 80a7 	beq.w	80014d2 <_svfiprintf_r+0x1c6>
 8001384:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8001386:	445a      	add	r2, fp
 8001388:	9209      	str	r2, [sp, #36]	@ 0x24
 800138a:	f89a 3000 	ldrb.w	r3, [sl]
 800138e:	2b00      	cmp	r3, #0
 8001390:	f000 809f 	beq.w	80014d2 <_svfiprintf_r+0x1c6>
 8001394:	2300      	movs	r3, #0
 8001396:	f04f 32ff 	mov.w	r2, #4294967295
 800139a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800139e:	f10a 0a01 	add.w	sl, sl, #1
 80013a2:	9304      	str	r3, [sp, #16]
 80013a4:	9307      	str	r3, [sp, #28]
 80013a6:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80013aa:	931a      	str	r3, [sp, #104]	@ 0x68
 80013ac:	4654      	mov	r4, sl
 80013ae:	2205      	movs	r2, #5
 80013b0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80013b4:	484e      	ldr	r0, [pc, #312]	@ (80014f0 <_svfiprintf_r+0x1e4>)
 80013b6:	f7fe ff1b 	bl	80001f0 <memchr>
 80013ba:	9a04      	ldr	r2, [sp, #16]
 80013bc:	b9d8      	cbnz	r0, 80013f6 <_svfiprintf_r+0xea>
 80013be:	06d0      	lsls	r0, r2, #27
 80013c0:	bf44      	itt	mi
 80013c2:	2320      	movmi	r3, #32
 80013c4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80013c8:	0711      	lsls	r1, r2, #28
 80013ca:	bf44      	itt	mi
 80013cc:	232b      	movmi	r3, #43	@ 0x2b
 80013ce:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80013d2:	f89a 3000 	ldrb.w	r3, [sl]
 80013d6:	2b2a      	cmp	r3, #42	@ 0x2a
 80013d8:	d015      	beq.n	8001406 <_svfiprintf_r+0xfa>
 80013da:	9a07      	ldr	r2, [sp, #28]
 80013dc:	4654      	mov	r4, sl
 80013de:	2000      	movs	r0, #0
 80013e0:	f04f 0c0a 	mov.w	ip, #10
 80013e4:	4621      	mov	r1, r4
 80013e6:	f811 3b01 	ldrb.w	r3, [r1], #1
 80013ea:	3b30      	subs	r3, #48	@ 0x30
 80013ec:	2b09      	cmp	r3, #9
 80013ee:	d94b      	bls.n	8001488 <_svfiprintf_r+0x17c>
 80013f0:	b1b0      	cbz	r0, 8001420 <_svfiprintf_r+0x114>
 80013f2:	9207      	str	r2, [sp, #28]
 80013f4:	e014      	b.n	8001420 <_svfiprintf_r+0x114>
 80013f6:	eba0 0308 	sub.w	r3, r0, r8
 80013fa:	fa09 f303 	lsl.w	r3, r9, r3
 80013fe:	4313      	orrs	r3, r2
 8001400:	9304      	str	r3, [sp, #16]
 8001402:	46a2      	mov	sl, r4
 8001404:	e7d2      	b.n	80013ac <_svfiprintf_r+0xa0>
 8001406:	9b03      	ldr	r3, [sp, #12]
 8001408:	1d19      	adds	r1, r3, #4
 800140a:	681b      	ldr	r3, [r3, #0]
 800140c:	9103      	str	r1, [sp, #12]
 800140e:	2b00      	cmp	r3, #0
 8001410:	bfbb      	ittet	lt
 8001412:	425b      	neglt	r3, r3
 8001414:	f042 0202 	orrlt.w	r2, r2, #2
 8001418:	9307      	strge	r3, [sp, #28]
 800141a:	9307      	strlt	r3, [sp, #28]
 800141c:	bfb8      	it	lt
 800141e:	9204      	strlt	r2, [sp, #16]
 8001420:	7823      	ldrb	r3, [r4, #0]
 8001422:	2b2e      	cmp	r3, #46	@ 0x2e
 8001424:	d10a      	bne.n	800143c <_svfiprintf_r+0x130>
 8001426:	7863      	ldrb	r3, [r4, #1]
 8001428:	2b2a      	cmp	r3, #42	@ 0x2a
 800142a:	d132      	bne.n	8001492 <_svfiprintf_r+0x186>
 800142c:	9b03      	ldr	r3, [sp, #12]
 800142e:	1d1a      	adds	r2, r3, #4
 8001430:	681b      	ldr	r3, [r3, #0]
 8001432:	9203      	str	r2, [sp, #12]
 8001434:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8001438:	3402      	adds	r4, #2
 800143a:	9305      	str	r3, [sp, #20]
 800143c:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8001500 <_svfiprintf_r+0x1f4>
 8001440:	7821      	ldrb	r1, [r4, #0]
 8001442:	2203      	movs	r2, #3
 8001444:	4650      	mov	r0, sl
 8001446:	f7fe fed3 	bl	80001f0 <memchr>
 800144a:	b138      	cbz	r0, 800145c <_svfiprintf_r+0x150>
 800144c:	9b04      	ldr	r3, [sp, #16]
 800144e:	eba0 000a 	sub.w	r0, r0, sl
 8001452:	2240      	movs	r2, #64	@ 0x40
 8001454:	4082      	lsls	r2, r0
 8001456:	4313      	orrs	r3, r2
 8001458:	3401      	adds	r4, #1
 800145a:	9304      	str	r3, [sp, #16]
 800145c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001460:	4824      	ldr	r0, [pc, #144]	@ (80014f4 <_svfiprintf_r+0x1e8>)
 8001462:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8001466:	2206      	movs	r2, #6
 8001468:	f7fe fec2 	bl	80001f0 <memchr>
 800146c:	2800      	cmp	r0, #0
 800146e:	d036      	beq.n	80014de <_svfiprintf_r+0x1d2>
 8001470:	4b21      	ldr	r3, [pc, #132]	@ (80014f8 <_svfiprintf_r+0x1ec>)
 8001472:	bb1b      	cbnz	r3, 80014bc <_svfiprintf_r+0x1b0>
 8001474:	9b03      	ldr	r3, [sp, #12]
 8001476:	3307      	adds	r3, #7
 8001478:	f023 0307 	bic.w	r3, r3, #7
 800147c:	3308      	adds	r3, #8
 800147e:	9303      	str	r3, [sp, #12]
 8001480:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001482:	4433      	add	r3, r6
 8001484:	9309      	str	r3, [sp, #36]	@ 0x24
 8001486:	e76a      	b.n	800135e <_svfiprintf_r+0x52>
 8001488:	fb0c 3202 	mla	r2, ip, r2, r3
 800148c:	460c      	mov	r4, r1
 800148e:	2001      	movs	r0, #1
 8001490:	e7a8      	b.n	80013e4 <_svfiprintf_r+0xd8>
 8001492:	2300      	movs	r3, #0
 8001494:	3401      	adds	r4, #1
 8001496:	9305      	str	r3, [sp, #20]
 8001498:	4619      	mov	r1, r3
 800149a:	f04f 0c0a 	mov.w	ip, #10
 800149e:	4620      	mov	r0, r4
 80014a0:	f810 2b01 	ldrb.w	r2, [r0], #1
 80014a4:	3a30      	subs	r2, #48	@ 0x30
 80014a6:	2a09      	cmp	r2, #9
 80014a8:	d903      	bls.n	80014b2 <_svfiprintf_r+0x1a6>
 80014aa:	2b00      	cmp	r3, #0
 80014ac:	d0c6      	beq.n	800143c <_svfiprintf_r+0x130>
 80014ae:	9105      	str	r1, [sp, #20]
 80014b0:	e7c4      	b.n	800143c <_svfiprintf_r+0x130>
 80014b2:	fb0c 2101 	mla	r1, ip, r1, r2
 80014b6:	4604      	mov	r4, r0
 80014b8:	2301      	movs	r3, #1
 80014ba:	e7f0      	b.n	800149e <_svfiprintf_r+0x192>
 80014bc:	ab03      	add	r3, sp, #12
 80014be:	9300      	str	r3, [sp, #0]
 80014c0:	462a      	mov	r2, r5
 80014c2:	4b0e      	ldr	r3, [pc, #56]	@ (80014fc <_svfiprintf_r+0x1f0>)
 80014c4:	a904      	add	r1, sp, #16
 80014c6:	4638      	mov	r0, r7
 80014c8:	f3af 8000 	nop.w
 80014cc:	1c42      	adds	r2, r0, #1
 80014ce:	4606      	mov	r6, r0
 80014d0:	d1d6      	bne.n	8001480 <_svfiprintf_r+0x174>
 80014d2:	89ab      	ldrh	r3, [r5, #12]
 80014d4:	065b      	lsls	r3, r3, #25
 80014d6:	f53f af2d 	bmi.w	8001334 <_svfiprintf_r+0x28>
 80014da:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80014dc:	e72c      	b.n	8001338 <_svfiprintf_r+0x2c>
 80014de:	ab03      	add	r3, sp, #12
 80014e0:	9300      	str	r3, [sp, #0]
 80014e2:	462a      	mov	r2, r5
 80014e4:	4b05      	ldr	r3, [pc, #20]	@ (80014fc <_svfiprintf_r+0x1f0>)
 80014e6:	a904      	add	r1, sp, #16
 80014e8:	4638      	mov	r0, r7
 80014ea:	f000 f879 	bl	80015e0 <_printf_i>
 80014ee:	e7ed      	b.n	80014cc <_svfiprintf_r+0x1c0>
 80014f0:	08001aeb 	.word	0x08001aeb
 80014f4:	08001af5 	.word	0x08001af5
 80014f8:	00000000 	.word	0x00000000
 80014fc:	08001255 	.word	0x08001255
 8001500:	08001af1 	.word	0x08001af1

08001504 <_printf_common>:
 8001504:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001508:	4616      	mov	r6, r2
 800150a:	4698      	mov	r8, r3
 800150c:	688a      	ldr	r2, [r1, #8]
 800150e:	690b      	ldr	r3, [r1, #16]
 8001510:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8001514:	4293      	cmp	r3, r2
 8001516:	bfb8      	it	lt
 8001518:	4613      	movlt	r3, r2
 800151a:	6033      	str	r3, [r6, #0]
 800151c:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8001520:	4607      	mov	r7, r0
 8001522:	460c      	mov	r4, r1
 8001524:	b10a      	cbz	r2, 800152a <_printf_common+0x26>
 8001526:	3301      	adds	r3, #1
 8001528:	6033      	str	r3, [r6, #0]
 800152a:	6823      	ldr	r3, [r4, #0]
 800152c:	0699      	lsls	r1, r3, #26
 800152e:	bf42      	ittt	mi
 8001530:	6833      	ldrmi	r3, [r6, #0]
 8001532:	3302      	addmi	r3, #2
 8001534:	6033      	strmi	r3, [r6, #0]
 8001536:	6825      	ldr	r5, [r4, #0]
 8001538:	f015 0506 	ands.w	r5, r5, #6
 800153c:	d106      	bne.n	800154c <_printf_common+0x48>
 800153e:	f104 0a19 	add.w	sl, r4, #25
 8001542:	68e3      	ldr	r3, [r4, #12]
 8001544:	6832      	ldr	r2, [r6, #0]
 8001546:	1a9b      	subs	r3, r3, r2
 8001548:	42ab      	cmp	r3, r5
 800154a:	dc26      	bgt.n	800159a <_printf_common+0x96>
 800154c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8001550:	6822      	ldr	r2, [r4, #0]
 8001552:	3b00      	subs	r3, #0
 8001554:	bf18      	it	ne
 8001556:	2301      	movne	r3, #1
 8001558:	0692      	lsls	r2, r2, #26
 800155a:	d42b      	bmi.n	80015b4 <_printf_common+0xb0>
 800155c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8001560:	4641      	mov	r1, r8
 8001562:	4638      	mov	r0, r7
 8001564:	47c8      	blx	r9
 8001566:	3001      	adds	r0, #1
 8001568:	d01e      	beq.n	80015a8 <_printf_common+0xa4>
 800156a:	6823      	ldr	r3, [r4, #0]
 800156c:	6922      	ldr	r2, [r4, #16]
 800156e:	f003 0306 	and.w	r3, r3, #6
 8001572:	2b04      	cmp	r3, #4
 8001574:	bf02      	ittt	eq
 8001576:	68e5      	ldreq	r5, [r4, #12]
 8001578:	6833      	ldreq	r3, [r6, #0]
 800157a:	1aed      	subeq	r5, r5, r3
 800157c:	68a3      	ldr	r3, [r4, #8]
 800157e:	bf0c      	ite	eq
 8001580:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001584:	2500      	movne	r5, #0
 8001586:	4293      	cmp	r3, r2
 8001588:	bfc4      	itt	gt
 800158a:	1a9b      	subgt	r3, r3, r2
 800158c:	18ed      	addgt	r5, r5, r3
 800158e:	2600      	movs	r6, #0
 8001590:	341a      	adds	r4, #26
 8001592:	42b5      	cmp	r5, r6
 8001594:	d11a      	bne.n	80015cc <_printf_common+0xc8>
 8001596:	2000      	movs	r0, #0
 8001598:	e008      	b.n	80015ac <_printf_common+0xa8>
 800159a:	2301      	movs	r3, #1
 800159c:	4652      	mov	r2, sl
 800159e:	4641      	mov	r1, r8
 80015a0:	4638      	mov	r0, r7
 80015a2:	47c8      	blx	r9
 80015a4:	3001      	adds	r0, #1
 80015a6:	d103      	bne.n	80015b0 <_printf_common+0xac>
 80015a8:	f04f 30ff 	mov.w	r0, #4294967295
 80015ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80015b0:	3501      	adds	r5, #1
 80015b2:	e7c6      	b.n	8001542 <_printf_common+0x3e>
 80015b4:	18e1      	adds	r1, r4, r3
 80015b6:	1c5a      	adds	r2, r3, #1
 80015b8:	2030      	movs	r0, #48	@ 0x30
 80015ba:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80015be:	4422      	add	r2, r4
 80015c0:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80015c4:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80015c8:	3302      	adds	r3, #2
 80015ca:	e7c7      	b.n	800155c <_printf_common+0x58>
 80015cc:	2301      	movs	r3, #1
 80015ce:	4622      	mov	r2, r4
 80015d0:	4641      	mov	r1, r8
 80015d2:	4638      	mov	r0, r7
 80015d4:	47c8      	blx	r9
 80015d6:	3001      	adds	r0, #1
 80015d8:	d0e6      	beq.n	80015a8 <_printf_common+0xa4>
 80015da:	3601      	adds	r6, #1
 80015dc:	e7d9      	b.n	8001592 <_printf_common+0x8e>
	...

080015e0 <_printf_i>:
 80015e0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80015e4:	7e0f      	ldrb	r7, [r1, #24]
 80015e6:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80015e8:	2f78      	cmp	r7, #120	@ 0x78
 80015ea:	4691      	mov	r9, r2
 80015ec:	4680      	mov	r8, r0
 80015ee:	460c      	mov	r4, r1
 80015f0:	469a      	mov	sl, r3
 80015f2:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80015f6:	d807      	bhi.n	8001608 <_printf_i+0x28>
 80015f8:	2f62      	cmp	r7, #98	@ 0x62
 80015fa:	d80a      	bhi.n	8001612 <_printf_i+0x32>
 80015fc:	2f00      	cmp	r7, #0
 80015fe:	f000 80d2 	beq.w	80017a6 <_printf_i+0x1c6>
 8001602:	2f58      	cmp	r7, #88	@ 0x58
 8001604:	f000 80b9 	beq.w	800177a <_printf_i+0x19a>
 8001608:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800160c:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8001610:	e03a      	b.n	8001688 <_printf_i+0xa8>
 8001612:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8001616:	2b15      	cmp	r3, #21
 8001618:	d8f6      	bhi.n	8001608 <_printf_i+0x28>
 800161a:	a101      	add	r1, pc, #4	@ (adr r1, 8001620 <_printf_i+0x40>)
 800161c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001620:	08001679 	.word	0x08001679
 8001624:	0800168d 	.word	0x0800168d
 8001628:	08001609 	.word	0x08001609
 800162c:	08001609 	.word	0x08001609
 8001630:	08001609 	.word	0x08001609
 8001634:	08001609 	.word	0x08001609
 8001638:	0800168d 	.word	0x0800168d
 800163c:	08001609 	.word	0x08001609
 8001640:	08001609 	.word	0x08001609
 8001644:	08001609 	.word	0x08001609
 8001648:	08001609 	.word	0x08001609
 800164c:	0800178d 	.word	0x0800178d
 8001650:	080016b7 	.word	0x080016b7
 8001654:	08001747 	.word	0x08001747
 8001658:	08001609 	.word	0x08001609
 800165c:	08001609 	.word	0x08001609
 8001660:	080017af 	.word	0x080017af
 8001664:	08001609 	.word	0x08001609
 8001668:	080016b7 	.word	0x080016b7
 800166c:	08001609 	.word	0x08001609
 8001670:	08001609 	.word	0x08001609
 8001674:	0800174f 	.word	0x0800174f
 8001678:	6833      	ldr	r3, [r6, #0]
 800167a:	1d1a      	adds	r2, r3, #4
 800167c:	681b      	ldr	r3, [r3, #0]
 800167e:	6032      	str	r2, [r6, #0]
 8001680:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001684:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8001688:	2301      	movs	r3, #1
 800168a:	e09d      	b.n	80017c8 <_printf_i+0x1e8>
 800168c:	6833      	ldr	r3, [r6, #0]
 800168e:	6820      	ldr	r0, [r4, #0]
 8001690:	1d19      	adds	r1, r3, #4
 8001692:	6031      	str	r1, [r6, #0]
 8001694:	0606      	lsls	r6, r0, #24
 8001696:	d501      	bpl.n	800169c <_printf_i+0xbc>
 8001698:	681d      	ldr	r5, [r3, #0]
 800169a:	e003      	b.n	80016a4 <_printf_i+0xc4>
 800169c:	0645      	lsls	r5, r0, #25
 800169e:	d5fb      	bpl.n	8001698 <_printf_i+0xb8>
 80016a0:	f9b3 5000 	ldrsh.w	r5, [r3]
 80016a4:	2d00      	cmp	r5, #0
 80016a6:	da03      	bge.n	80016b0 <_printf_i+0xd0>
 80016a8:	232d      	movs	r3, #45	@ 0x2d
 80016aa:	426d      	negs	r5, r5
 80016ac:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80016b0:	4859      	ldr	r0, [pc, #356]	@ (8001818 <_printf_i+0x238>)
 80016b2:	230a      	movs	r3, #10
 80016b4:	e011      	b.n	80016da <_printf_i+0xfa>
 80016b6:	6821      	ldr	r1, [r4, #0]
 80016b8:	6833      	ldr	r3, [r6, #0]
 80016ba:	0608      	lsls	r0, r1, #24
 80016bc:	f853 5b04 	ldr.w	r5, [r3], #4
 80016c0:	d402      	bmi.n	80016c8 <_printf_i+0xe8>
 80016c2:	0649      	lsls	r1, r1, #25
 80016c4:	bf48      	it	mi
 80016c6:	b2ad      	uxthmi	r5, r5
 80016c8:	2f6f      	cmp	r7, #111	@ 0x6f
 80016ca:	4853      	ldr	r0, [pc, #332]	@ (8001818 <_printf_i+0x238>)
 80016cc:	6033      	str	r3, [r6, #0]
 80016ce:	bf14      	ite	ne
 80016d0:	230a      	movne	r3, #10
 80016d2:	2308      	moveq	r3, #8
 80016d4:	2100      	movs	r1, #0
 80016d6:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80016da:	6866      	ldr	r6, [r4, #4]
 80016dc:	60a6      	str	r6, [r4, #8]
 80016de:	2e00      	cmp	r6, #0
 80016e0:	bfa2      	ittt	ge
 80016e2:	6821      	ldrge	r1, [r4, #0]
 80016e4:	f021 0104 	bicge.w	r1, r1, #4
 80016e8:	6021      	strge	r1, [r4, #0]
 80016ea:	b90d      	cbnz	r5, 80016f0 <_printf_i+0x110>
 80016ec:	2e00      	cmp	r6, #0
 80016ee:	d04b      	beq.n	8001788 <_printf_i+0x1a8>
 80016f0:	4616      	mov	r6, r2
 80016f2:	fbb5 f1f3 	udiv	r1, r5, r3
 80016f6:	fb03 5711 	mls	r7, r3, r1, r5
 80016fa:	5dc7      	ldrb	r7, [r0, r7]
 80016fc:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001700:	462f      	mov	r7, r5
 8001702:	42bb      	cmp	r3, r7
 8001704:	460d      	mov	r5, r1
 8001706:	d9f4      	bls.n	80016f2 <_printf_i+0x112>
 8001708:	2b08      	cmp	r3, #8
 800170a:	d10b      	bne.n	8001724 <_printf_i+0x144>
 800170c:	6823      	ldr	r3, [r4, #0]
 800170e:	07df      	lsls	r7, r3, #31
 8001710:	d508      	bpl.n	8001724 <_printf_i+0x144>
 8001712:	6923      	ldr	r3, [r4, #16]
 8001714:	6861      	ldr	r1, [r4, #4]
 8001716:	4299      	cmp	r1, r3
 8001718:	bfde      	ittt	le
 800171a:	2330      	movle	r3, #48	@ 0x30
 800171c:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001720:	f106 36ff 	addle.w	r6, r6, #4294967295
 8001724:	1b92      	subs	r2, r2, r6
 8001726:	6122      	str	r2, [r4, #16]
 8001728:	f8cd a000 	str.w	sl, [sp]
 800172c:	464b      	mov	r3, r9
 800172e:	aa03      	add	r2, sp, #12
 8001730:	4621      	mov	r1, r4
 8001732:	4640      	mov	r0, r8
 8001734:	f7ff fee6 	bl	8001504 <_printf_common>
 8001738:	3001      	adds	r0, #1
 800173a:	d14a      	bne.n	80017d2 <_printf_i+0x1f2>
 800173c:	f04f 30ff 	mov.w	r0, #4294967295
 8001740:	b004      	add	sp, #16
 8001742:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001746:	6823      	ldr	r3, [r4, #0]
 8001748:	f043 0320 	orr.w	r3, r3, #32
 800174c:	6023      	str	r3, [r4, #0]
 800174e:	4833      	ldr	r0, [pc, #204]	@ (800181c <_printf_i+0x23c>)
 8001750:	2778      	movs	r7, #120	@ 0x78
 8001752:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8001756:	6823      	ldr	r3, [r4, #0]
 8001758:	6831      	ldr	r1, [r6, #0]
 800175a:	061f      	lsls	r7, r3, #24
 800175c:	f851 5b04 	ldr.w	r5, [r1], #4
 8001760:	d402      	bmi.n	8001768 <_printf_i+0x188>
 8001762:	065f      	lsls	r7, r3, #25
 8001764:	bf48      	it	mi
 8001766:	b2ad      	uxthmi	r5, r5
 8001768:	6031      	str	r1, [r6, #0]
 800176a:	07d9      	lsls	r1, r3, #31
 800176c:	bf44      	itt	mi
 800176e:	f043 0320 	orrmi.w	r3, r3, #32
 8001772:	6023      	strmi	r3, [r4, #0]
 8001774:	b11d      	cbz	r5, 800177e <_printf_i+0x19e>
 8001776:	2310      	movs	r3, #16
 8001778:	e7ac      	b.n	80016d4 <_printf_i+0xf4>
 800177a:	4827      	ldr	r0, [pc, #156]	@ (8001818 <_printf_i+0x238>)
 800177c:	e7e9      	b.n	8001752 <_printf_i+0x172>
 800177e:	6823      	ldr	r3, [r4, #0]
 8001780:	f023 0320 	bic.w	r3, r3, #32
 8001784:	6023      	str	r3, [r4, #0]
 8001786:	e7f6      	b.n	8001776 <_printf_i+0x196>
 8001788:	4616      	mov	r6, r2
 800178a:	e7bd      	b.n	8001708 <_printf_i+0x128>
 800178c:	6833      	ldr	r3, [r6, #0]
 800178e:	6825      	ldr	r5, [r4, #0]
 8001790:	6961      	ldr	r1, [r4, #20]
 8001792:	1d18      	adds	r0, r3, #4
 8001794:	6030      	str	r0, [r6, #0]
 8001796:	062e      	lsls	r6, r5, #24
 8001798:	681b      	ldr	r3, [r3, #0]
 800179a:	d501      	bpl.n	80017a0 <_printf_i+0x1c0>
 800179c:	6019      	str	r1, [r3, #0]
 800179e:	e002      	b.n	80017a6 <_printf_i+0x1c6>
 80017a0:	0668      	lsls	r0, r5, #25
 80017a2:	d5fb      	bpl.n	800179c <_printf_i+0x1bc>
 80017a4:	8019      	strh	r1, [r3, #0]
 80017a6:	2300      	movs	r3, #0
 80017a8:	6123      	str	r3, [r4, #16]
 80017aa:	4616      	mov	r6, r2
 80017ac:	e7bc      	b.n	8001728 <_printf_i+0x148>
 80017ae:	6833      	ldr	r3, [r6, #0]
 80017b0:	1d1a      	adds	r2, r3, #4
 80017b2:	6032      	str	r2, [r6, #0]
 80017b4:	681e      	ldr	r6, [r3, #0]
 80017b6:	6862      	ldr	r2, [r4, #4]
 80017b8:	2100      	movs	r1, #0
 80017ba:	4630      	mov	r0, r6
 80017bc:	f7fe fd18 	bl	80001f0 <memchr>
 80017c0:	b108      	cbz	r0, 80017c6 <_printf_i+0x1e6>
 80017c2:	1b80      	subs	r0, r0, r6
 80017c4:	6060      	str	r0, [r4, #4]
 80017c6:	6863      	ldr	r3, [r4, #4]
 80017c8:	6123      	str	r3, [r4, #16]
 80017ca:	2300      	movs	r3, #0
 80017cc:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80017d0:	e7aa      	b.n	8001728 <_printf_i+0x148>
 80017d2:	6923      	ldr	r3, [r4, #16]
 80017d4:	4632      	mov	r2, r6
 80017d6:	4649      	mov	r1, r9
 80017d8:	4640      	mov	r0, r8
 80017da:	47d0      	blx	sl
 80017dc:	3001      	adds	r0, #1
 80017de:	d0ad      	beq.n	800173c <_printf_i+0x15c>
 80017e0:	6823      	ldr	r3, [r4, #0]
 80017e2:	079b      	lsls	r3, r3, #30
 80017e4:	d413      	bmi.n	800180e <_printf_i+0x22e>
 80017e6:	68e0      	ldr	r0, [r4, #12]
 80017e8:	9b03      	ldr	r3, [sp, #12]
 80017ea:	4298      	cmp	r0, r3
 80017ec:	bfb8      	it	lt
 80017ee:	4618      	movlt	r0, r3
 80017f0:	e7a6      	b.n	8001740 <_printf_i+0x160>
 80017f2:	2301      	movs	r3, #1
 80017f4:	4632      	mov	r2, r6
 80017f6:	4649      	mov	r1, r9
 80017f8:	4640      	mov	r0, r8
 80017fa:	47d0      	blx	sl
 80017fc:	3001      	adds	r0, #1
 80017fe:	d09d      	beq.n	800173c <_printf_i+0x15c>
 8001800:	3501      	adds	r5, #1
 8001802:	68e3      	ldr	r3, [r4, #12]
 8001804:	9903      	ldr	r1, [sp, #12]
 8001806:	1a5b      	subs	r3, r3, r1
 8001808:	42ab      	cmp	r3, r5
 800180a:	dcf2      	bgt.n	80017f2 <_printf_i+0x212>
 800180c:	e7eb      	b.n	80017e6 <_printf_i+0x206>
 800180e:	2500      	movs	r5, #0
 8001810:	f104 0619 	add.w	r6, r4, #25
 8001814:	e7f5      	b.n	8001802 <_printf_i+0x222>
 8001816:	bf00      	nop
 8001818:	08001afc 	.word	0x08001afc
 800181c:	08001b0d 	.word	0x08001b0d

08001820 <memmove>:
 8001820:	4288      	cmp	r0, r1
 8001822:	b510      	push	{r4, lr}
 8001824:	eb01 0402 	add.w	r4, r1, r2
 8001828:	d902      	bls.n	8001830 <memmove+0x10>
 800182a:	4284      	cmp	r4, r0
 800182c:	4623      	mov	r3, r4
 800182e:	d807      	bhi.n	8001840 <memmove+0x20>
 8001830:	1e43      	subs	r3, r0, #1
 8001832:	42a1      	cmp	r1, r4
 8001834:	d008      	beq.n	8001848 <memmove+0x28>
 8001836:	f811 2b01 	ldrb.w	r2, [r1], #1
 800183a:	f803 2f01 	strb.w	r2, [r3, #1]!
 800183e:	e7f8      	b.n	8001832 <memmove+0x12>
 8001840:	4402      	add	r2, r0
 8001842:	4601      	mov	r1, r0
 8001844:	428a      	cmp	r2, r1
 8001846:	d100      	bne.n	800184a <memmove+0x2a>
 8001848:	bd10      	pop	{r4, pc}
 800184a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800184e:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8001852:	e7f7      	b.n	8001844 <memmove+0x24>

08001854 <_sbrk_r>:
 8001854:	b538      	push	{r3, r4, r5, lr}
 8001856:	4d06      	ldr	r5, [pc, #24]	@ (8001870 <_sbrk_r+0x1c>)
 8001858:	2300      	movs	r3, #0
 800185a:	4604      	mov	r4, r0
 800185c:	4608      	mov	r0, r1
 800185e:	602b      	str	r3, [r5, #0]
 8001860:	f000 f84c 	bl	80018fc <_sbrk>
 8001864:	1c43      	adds	r3, r0, #1
 8001866:	d102      	bne.n	800186e <_sbrk_r+0x1a>
 8001868:	682b      	ldr	r3, [r5, #0]
 800186a:	b103      	cbz	r3, 800186e <_sbrk_r+0x1a>
 800186c:	6023      	str	r3, [r4, #0]
 800186e:	bd38      	pop	{r3, r4, r5, pc}
 8001870:	200001bc 	.word	0x200001bc

08001874 <memcpy>:
 8001874:	440a      	add	r2, r1
 8001876:	4291      	cmp	r1, r2
 8001878:	f100 33ff 	add.w	r3, r0, #4294967295
 800187c:	d100      	bne.n	8001880 <memcpy+0xc>
 800187e:	4770      	bx	lr
 8001880:	b510      	push	{r4, lr}
 8001882:	f811 4b01 	ldrb.w	r4, [r1], #1
 8001886:	f803 4f01 	strb.w	r4, [r3, #1]!
 800188a:	4291      	cmp	r1, r2
 800188c:	d1f9      	bne.n	8001882 <memcpy+0xe>
 800188e:	bd10      	pop	{r4, pc}

08001890 <_realloc_r>:
 8001890:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001894:	4680      	mov	r8, r0
 8001896:	4615      	mov	r5, r2
 8001898:	460c      	mov	r4, r1
 800189a:	b921      	cbnz	r1, 80018a6 <_realloc_r+0x16>
 800189c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80018a0:	4611      	mov	r1, r2
 80018a2:	f7ff bc4b 	b.w	800113c <_malloc_r>
 80018a6:	b92a      	cbnz	r2, 80018b4 <_realloc_r+0x24>
 80018a8:	f7ff fbdc 	bl	8001064 <_free_r>
 80018ac:	2400      	movs	r4, #0
 80018ae:	4620      	mov	r0, r4
 80018b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80018b4:	f000 f81a 	bl	80018ec <_malloc_usable_size_r>
 80018b8:	4285      	cmp	r5, r0
 80018ba:	4606      	mov	r6, r0
 80018bc:	d802      	bhi.n	80018c4 <_realloc_r+0x34>
 80018be:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 80018c2:	d8f4      	bhi.n	80018ae <_realloc_r+0x1e>
 80018c4:	4629      	mov	r1, r5
 80018c6:	4640      	mov	r0, r8
 80018c8:	f7ff fc38 	bl	800113c <_malloc_r>
 80018cc:	4607      	mov	r7, r0
 80018ce:	2800      	cmp	r0, #0
 80018d0:	d0ec      	beq.n	80018ac <_realloc_r+0x1c>
 80018d2:	42b5      	cmp	r5, r6
 80018d4:	462a      	mov	r2, r5
 80018d6:	4621      	mov	r1, r4
 80018d8:	bf28      	it	cs
 80018da:	4632      	movcs	r2, r6
 80018dc:	f7ff ffca 	bl	8001874 <memcpy>
 80018e0:	4621      	mov	r1, r4
 80018e2:	4640      	mov	r0, r8
 80018e4:	f7ff fbbe 	bl	8001064 <_free_r>
 80018e8:	463c      	mov	r4, r7
 80018ea:	e7e0      	b.n	80018ae <_realloc_r+0x1e>

080018ec <_malloc_usable_size_r>:
 80018ec:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80018f0:	1f18      	subs	r0, r3, #4
 80018f2:	2b00      	cmp	r3, #0
 80018f4:	bfbc      	itt	lt
 80018f6:	580b      	ldrlt	r3, [r1, r0]
 80018f8:	18c0      	addlt	r0, r0, r3
 80018fa:	4770      	bx	lr

080018fc <_sbrk>:
 80018fc:	4a04      	ldr	r2, [pc, #16]	@ (8001910 <_sbrk+0x14>)
 80018fe:	6811      	ldr	r1, [r2, #0]
 8001900:	4603      	mov	r3, r0
 8001902:	b909      	cbnz	r1, 8001908 <_sbrk+0xc>
 8001904:	4903      	ldr	r1, [pc, #12]	@ (8001914 <_sbrk+0x18>)
 8001906:	6011      	str	r1, [r2, #0]
 8001908:	6810      	ldr	r0, [r2, #0]
 800190a:	4403      	add	r3, r0
 800190c:	6013      	str	r3, [r2, #0]
 800190e:	4770      	bx	lr
 8001910:	200001cc 	.word	0x200001cc
 8001914:	200001d0 	.word	0x200001d0

08001918 <_init>:
 8001918:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800191a:	bf00      	nop
 800191c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800191e:	bc08      	pop	{r3}
 8001920:	469e      	mov	lr, r3
 8001922:	4770      	bx	lr

08001924 <_fini>:
 8001924:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001926:	bf00      	nop
 8001928:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800192a:	bc08      	pop	{r3}
 800192c:	469e      	mov	lr, r3
 800192e:	4770      	bx	lr
