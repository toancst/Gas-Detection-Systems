#include "stm32f4xx.h"

// Font chữ 5x8 pixel
const uint8_t font5x8[][5] = {
    {0x7E, 0x41, 0x41, 0x41, 0x7E}, // 'D'
    {0x7C, 0x12, 0x11, 0x12, 0x7C}, // 'A'
    {0x3E, 0x41, 0x41, 0x41, 0x3E}, // 'O'
    {0x07, 0x18, 0x60, 0x18, 0x07}, // 'V'
    {0x7F, 0x08, 0x10, 0x20, 0x7F}, // 'N'
    {0x01, 0x01, 0x7F, 0x01, 0x01}, // 'T'
    {0x00, 0x00, 0x00, 0x00, 0x00}  // ' ' (space)
};

// Delay đơn giản
void delay(volatile uint32_t count) {
    while (count--);
}

// Gửi 1 byte qua I2C
void I2C_WriteByte(uint8_t address, uint8_t reg, uint8_t data) {
    I2C1->CR1 |= I2C_CR1_START;
    while (!(I2C1->SR1 & I2C_SR1_SB));
    I2C1->DR = address << 1;
    while (!(I2C1->SR1 & I2C_SR1_ADDR));
    (void)I2C1->SR2;
    while (!(I2C1->SR1 & I2C_SR1_TXE));
    I2C1->DR = reg;
    while (!(I2C1->SR1 & I2C_SR1_TXE));
    I2C1->DR = data;
    while (!(I2C1->SR1 & I2C_SR1_BTF));
    I2C1->CR1 |= I2C_CR1_STOP;
}

// Gửi lệnh và dữ liệu đến SSD1306
void SSD1306_Command(uint8_t cmd) {
    I2C_WriteByte(0x3C, 0x00, cmd);
}

void SSD1306_Data(uint8_t data) {
    I2C_WriteByte(0x3C, 0x40, data);
}

// Khởi tạo SSD1306
void SSD1306_Init(void) {
    delay(10000);
    SSD1306_Command(0xAE);
    SSD1306_Command(0xD5); SSD1306_Command(0x80);
    SSD1306_Command(0xA8); SSD1306_Command(0x3F);
    SSD1306_Command(0xD3); SSD1306_Command(0x00);
    SSD1306_Command(0x40);
    SSD1306_Command(0x8D); SSD1306_Command(0x14);
    SSD1306_Command(0x20); SSD1306_Command(0x00);
    SSD1306_Command(0xA1);
    SSD1306_Command(0xC8);
    SSD1306_Command(0xDA); SSD1306_Command(0x12);
    SSD1306_Command(0x81); SSD1306_Command(0xCF);
    SSD1306_Command(0xD9); SSD1306_Command(0xF1);
    SSD1306_Command(0xDB); SSD1306_Command(0x40);
    SSD1306_Command(0xA4);
    SSD1306_Command(0xA6);
    SSD1306_Command(0xAF);
}

// Xoá màn hình
void SSD1306_Clear(void) {
    for (uint8_t page = 0; page < 8; page++) {
        SSD1306_SetCursor(0, page);
        for (uint8_t col = 0; col < 128; col++) {
            SSD1306_Data(0x00);
        }
    }
}

// Đặt con trỏ vị trí hiển thị
void SSD1306_SetCursor(uint8_t col, uint8_t page) {
    SSD1306_Command(0xB0 + page);
    SSD1306_Command(0x00 + (col & 0x0F));
    SSD1306_Command(0x10 + ((col >> 4) & 0x0F));
}

// Hiển thị 1 ký tự
void SSD1306_PrintChar(const uint8_t *chr) {
    for (int i = 0; i < 5; i++) {
        SSD1306_Data(chr[i]);
    }
    SSD1306_Data(0x00); // khoảng cách giữa ký tự
}

// In dòng chữ "DAO VAN DAT"
void SSD1306_PrintDaoVanDat(void) {
    SSD1306_Clear();
    SSD1306_SetCursor(31, 3); // căn giữa

    SSD1306_PrintChar(font5x8[0]); // D
    SSD1306_PrintChar(font5x8[1]); // A
    SSD1306_PrintChar(font5x8[2]); // O
    SSD1306_PrintChar(font5x8[6]); // space
    SSD1306_PrintChar(font5x8[3]); // V
    SSD1306_PrintChar(font5x8[1]); // A
    SSD1306_PrintChar(font5x8[4]); // N
    SSD1306_PrintChar(font5x8[6]); // space
    SSD1306_PrintChar(font5x8[0]); // D
    SSD1306_PrintChar(font5x8[1]); // A
    SSD1306_PrintChar(font5x8[5]); // T
}

// Cấu hình I2C1 trên PB8 (SCL), PB9 (SDA)
void I2C1_Init(void) {
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOBEN;
    RCC->APB1ENR |= RCC_APB1ENR_I2C1EN;

    GPIOB->MODER &= ~(0xF << (8 * 2));
    GPIOB->MODER |= (0xA << (8 * 2));
    GPIOB->OTYPER |= (0x3 << 8);
    GPIOB->OSPEEDR |= (0xF << (8 * 2));
    GPIOB->AFR[1] |= (0x44 << ((8 - 8) * 4)); // AFRH cho PB8, PB9

    I2C1->CR1 &= ~I2C_CR1_PE;
    I2C1->CR2 = 16;
    I2C1->CCR = 80;
    I2C1->TRISE = 17;
    I2C1->CR1 |= I2C_CR1_PE;
}

// Hàm main chính
int main(void) {
    I2C1_Init();
    SSD1306_Init();
    SSD1306_PrintDaoVanDat();
    while (1);
}
