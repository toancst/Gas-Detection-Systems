  /* Private includes ----------------------------------------------------------*/
  /* USER CODE BEGIN Includes */
  #include "string.h"
  /* USER CODE END Includes */
  
  
  /* USER CODE BEGIN PV */
  char *msg1 = "Entering Stop Mode\r\n";
  char *msg2 = "Exit from EXTI\r\n";
  /* USER CODE END PV */

  /* USER CODE BEGIN 2 */
  //Enable the PWR Clock
  __HAL_RCC_PWR_CLK_ENABLE();

  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, 1);
  HAL_Delay(10000);

  //Transmit entering stop mode message
  HAL_UART_Transmit(&huart2, (uint8_t *)msg1, strlen(msg1), HAL_MAX_DELAY);

  //Enter Stop Mode
  //Suspend Systick to save power
  HAL_SuspendTick();
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, 0);
  HAL_PWR_EnterSTOPMode(PWR_LOWPOWERREGULATOR_ON, PWR_STOPENTRY_WFI);


  /* USER CODE END 2 */


  /* USER CODE BEGIN WHILE */
  while (1)
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5);
	  HAL_Delay(300);
  }
  /* USER CODE END 3 */
}


  /* USER CODE BEGIN 4 */
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
  if (GPIO_Pin == GPIO_PIN_13){

	//MCU wakes up here
	HAL_ResumeTick();
	SystemClock_Config(); //Reconfigure the clock  after wakeup

	//Transmit exiting stop mode message
	HAL_UART_Transmit(&huart2, (uint8_t *)msg2, strlen(msg1), HAL_MAX_DELAY);
  }
}
/* USER CODE END 4 */